name: Console Release Notification

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'

jobs:
  notify-release:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'adobecom' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract PR information
        id: extract-prs
        run: |
          # Get recent merge commits
          MERGE_COMMITS=$(git log --oneline -10 --grep="Merge pull request")
          
          if [ -n "$MERGE_COMMITS" ]; then
            # Extract PR titles and numbers
            PR_LIST=""
            while IFS= read -r line; do
              if echo "$line" | grep -q "Merge pull request"; then
                # Extract PR number
                PR_NUM=$(echo "$line" | grep -o '#[0-9]*')
                
                # Extract PR title (everything after "Merge pull request #XXX: ")
                PR_TITLE=$(echo "$line" | sed 's/.*Merge pull request #[0-9]*: //' | sed 's/ from.*//')
                
                if [ -n "$PR_NUM" ] && [ -n "$PR_TITLE" ]; then
                  PR_LIST="${PR_LIST}- ${PR_TITLE} ${PR_NUM}\n"
                fi
              fi
            done <<< "$MERGE_COMMITS"
            
            echo "pr_list<<EOF" >> $GITHUB_OUTPUT
            echo -e "$PR_LIST" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "pr_list=No recent PRs found" >> $GITHUB_OUTPUT
          fi

      - name: Display release notification
        run: |
          echo ""
          echo "ðŸš€ Express Milo Release Deployed"
          echo "=================================="
          echo ""
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Link: https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          echo ""
          echo "## Changes in this Release"
          echo "${{ steps.extract-prs.outputs.pr_list }}"
          echo ""
          echo "---"
          echo "This notification was generated by GitHub Actions"
          echo ""

      - name: Save release notes to file
        run: |
          cat > release-notes.txt << EOF
          ðŸš€ Express Milo Release Deployed
          
          Repository: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Link: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
          
          ## Changes in this Release
          ${{ steps.extract-prs.outputs.pr_list }}
          
          ---
          This notification was generated by GitHub Actions
          EOF
          
          echo "Release notes saved to release-notes.txt"

      - name: Upload release notes as artifact
        uses: actions/upload-artifact@v3
        with:
          name: release-notes-${{ github.sha }}
          path: release-notes.txt
          retention-days: 30
