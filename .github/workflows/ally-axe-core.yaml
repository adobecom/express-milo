name: Accessibility Check

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
    branches:
      - stage
  issue_comment:
    types: [created]

jobs:
  a11y-check:
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false &&
      contains(join(fromJson('["' + join(github.event.pull_request.labels.*.name, '","') + '"]')), 'engineering')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Test URLs from PR body
        id: extract-urls
        run: |
          echo "urls=$(echo '${{ github.event.pull_request.body }}' | grep -Eo 'https?://[^ ]+' | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Fail if no Test URLs found
        if: steps.extract-urls.outputs.urls == ''
        run: |
          echo "‚ùå No test URLs found in the PR body under **Test URLs** section."
          exit 1

      - name: Run axe-core on Test URLs
        id: axe-scan
        run: |
          npx @axe-core/cli --timeout 60000 ${{ steps.extract-urls.outputs.urls }} --save ./axe-report.json || true

      - name: Format accessibility report
        id: format-report
        run: |
          echo "report<<EOF" >> $GITHUB_OUTPUT
          echo "### ‚ôø Accessibility Report" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          jq -r '
            .violations[]? | 
            "- **\(.impact | ascii_upcase)**: [\(.id)](\(.helpUrl))  
               Description: \(.description)  
               Affected Nodes: \(.nodes | length)"' axe-report.json >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: accessibility-report
          message: ${{ steps.format-report.outputs.report }}

      - name: Fail on A-level violations
        run: |
          if jq -e '.violations[] | select(.impact == "critical" or .impact == "serious")' axe-report.json > /dev/null; then
            echo "‚ùå A/AA violations detected. Failing job."
            exit 1
          fi

  rerun:
    if: >
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request != '' &&
      contains(github.event.comment.body, '/rerun-a11y')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get last commit SHA
        id: last-sha
        run: echo "sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT

      - name: Check if rerun needed
        id: rerun-check
        run: |
          if gh run list --branch ${{ github.event.pull_request.head.ref }} --json headSha,conclusion -q '.[] | select(.headSha=="${{ steps.last-sha.outputs.sha }}") | .conclusion' | grep -q "success"; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip rerun
        if: steps.rerun-check.outputs.skip == 'true'
        run: echo "‚úÖ No new commits since last successful run. Skipping rerun."

      - name: Trigger rerun
        if: steps.rerun-check.outputs.skip == 'false'
        run: echo "üîÑ Manual rerun of Accessibility Check requested via comment."
