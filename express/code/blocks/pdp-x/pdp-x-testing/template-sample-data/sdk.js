const e = { 585: (e, t) => {
  let o; t.lc = void 0, (o = t.lc || (t.lc = {})).ACCESS_DENIED = 'http://ns.adobe.com/adobecloud/problem/accessdenied', o.ASSET_LOCKED = 'http://ns.adobe.com/adobecloud/problem/assetlocked', o.ASSET_MOVED = 'http://ns.adobe.com/adobecloud/problem/assetmoved', o.ASSET_NAME_CONFLICT = 'http://ns.adobe.com/adobecloud/problem/assetnameconflict', o.ASSET_NAME_INVALID = 'http://ns.adobe.com/adobecloud/problem/assetnamenotvalid', o.ASSET_NOT_FOUND = 'http://ns.adobe.com/adobecloud/problem/assetnotfound', o.ASSET_STATE_NOT_ALLOWED = 'http://ns.adobe.com/adobecloud/problem/assetstatenotallowed', o.BAD_REQUEST = 'http://ns.adobe.com/adobecloud/problem/badrequest', o.BULK_REQUEST_NOT_ATTEMPTED = 'http://ns.adobe.com/adobecloud/problem/bulkrequestnotattempted', o.COMPOSITE_INTEGRITY = 'http://ns.adobe.com/adobecloud/problem/compositeintegrity', o.DCX_VALIDATION = 'http://ns.adobe.com/adobecloud/problem/dcxvalidation', o.DIRECTORY_NOT_EMPTY = 'http://ns.adobe.com/adobecloud/problem/directorynotempty', o.EMBED_INVALID = 'http://ns.adobe.com/adobecloud/problem/embedinvalid', o.EMBED_TOO_LARGE = 'http://ns.adobe.com/adobecloud/problem/embedtoolarge', o.ENCRYPTION_KEY_INACCESSIBLE = 'http://ns.adobe.com/adobecloud/problem/encryptionkeyinaccessible', o.INVALID_FRAGMENT = 'http://ns.adobe.com/adobecloud/problem/invalidfragment', o.LIMIT_CHILDREN_COUNT = 'http://ns.adobe.com/adobecloud/problem/limit/childrencount', o.LIMIT_COMPONENT_COUNT = 'http://ns.adobe.com/adobecloud/problem/limit/componentcount', o.LIMIT_EMBED_SELECTOR_COUNT = 'http://ns.adobe.com/adobecloud/problem/limit/embedspecifierselectorcount', o.LIMIT_MILESTONE_COUNT = 'http://ns.adobe.com/adobecloud/problem/limit/milestonecount', o.LIMIT_MILESTONE_LABEL_LENGTH = 'http://ns.adobe.com/adobecloud/problem/limit/milestonelabellength', o.LIMIT_NAME_LENGTH = 'http://ns.adobe.com/adobecloud/problem/limit/namelength', o.LIMIT_OPERATION_COUNT = 'http://ns.adobe.com/adobecloud/problem/limit/operationcount', o.LIMIT_PATH_SEGMENT_COUNT = 'http://ns.adobe.com/adobecloud/problem/limit/pathsegmentcount', o.LIMIT_RESOURCE_COUNT = 'http://ns.adobe.com/adobecloud/problem/limit/resourcecount', o.LIMIT_RESOURCE_SIZE = 'http://ns.adobe.com/adobecloud/problem/limit/resourcesize', o.NOT_ENTITLED = 'http://ns.adobe.com/adobecloud/problem/notentitled', o.OPERATION_FAILED = 'http://ns.adobe.com/adobecloud/problem/operationfailed', o.OPERATION_TARGET_CONFLICT = 'http://ns.adobe.com/adobecloud/problem/operation/targetconflict', o.QUOTA_EXCEEDED = 'http://ns.adobe.com/adobecloud/problem/quotaexceeded', o.REPOSITORY_NOT_FOUND = 'http://ns.adobe.com/adobecloud/problem/repositorynotfound', o.RESOURCE_BLOCKED = 'http://ns.adobe.com/adobecloud/problem/resourceblocked', o.RESOURCE_NOT_ALLOWED = 'http://ns.adobe.com/adobecloud/problem/resourcenotallowed', o.RESOURCE_NOT_FOUND = 'http://ns.adobe.com/adobecloud/problem/resourcenotfound', o.RESOURCE_NOT_READY = 'http://ns.adobe.com/adobecloud/problem/resourcenotready', o.RESPONSE_TOO_LARGE = 'http://ns.adobe.com/adobecloud/problem/responsetoolarge', o.USER_BLOCKED = 'http://ns.adobe.com/adobecloud/problem/userblocked', o.VERSION_NOT_FOUND = 'http://ns.adobe.com/adobecloud/problem/versionnotfound', o.PARTIAL_ASSET = 'http://ns.adobe.com/adobecloud/problem/partialasset'; const n = 'ASSET_MOVED'; const r = 'INVALID_JSON'; const a = 'READ_ONLY'; const i = ''; const s = 'PRECONDITION_FAILED'; const c = 'INVALID_DATA'; const _ = 'DUPLICATE_VALUE'; const u = 'NO_BASE_BRANCH_DATA'; const l = 'INVALID_STATE'; const E = 'DELETED_COMPOSITE'; const p = 'INCOMPLETE_COMPOSITE'; const d = 'UNEXPECTED_RESPONSE'; const T = 'NETWORK_ERROR'; const m = 'COMPONENT_DOWNLOAD_ERROR'; const O = 'COMPONENT_UPLOAD_ERROR'; const f = 'COMPONENT_MODIFIED_ERROR'; const g = 'UPDATE_CONFLICT'; const h = 'NO_COMPOSITE'; const C = 'ALREADY_EXISTS'; const N = 'SERVICE_IS_INACTIVE'; const S = 'EXCEEDS_QUOTA'; const I = 'NOT_IMPLEMENTED'; const y = 'RETRYABLE_SERVER_ERROR'; const A = 'TIMED_OUT'; const U = 'UNEXPECTED'; const R = 'TERMINATED_INPUTSTREAM'; const b = 'WRONG_ENDPOINT'; const v = 'ENOSPC'; const M = 'FILE_EXISTS_IN_CLOUD'; const D = 'ASSET_NOT_FOUND'; const w = 'COMPOSITE_NOT_FOUND'; const L = 'NOT_FOUND'; const P = 'UNAUTHORIZED'; const F = 'FORBIDDEN'; const k = 'METHOD_NOT_ALLOWED'; const V = 'NOT_ACCEPTABLE'; const G = 'BANDWIDTH_LIMIT_EXCEEDED'; const x = 'ABORTED'; const B = 'TOO_MANY_REDIRECTS'; const z = 'INSECURE_REDIRECT'; const Y = 'RESOURCE_NOT_READY'; const K = { [N]: !0, [x]: !0, [z]: !0, [B]: !0, [I]: !0, [S]: !0, [y]: !0, [A]: !0, [R]: !0, [b]: !0, [v]: !0, [i]: !0, [l]: !0 }; class j extends Error {
    constructor(e, t, o, n, r) { let a; if (super(), this.code = e, this.name = 'AdobeDCXError', this._additionalData = {}, ((a = n == null ? void 0 : n.headers) === null || void 0 === a ? void 0 : a['content-type']) === 'application/problem+json' && n.response && typeof n.response === 'object' && typeof n.response.slice === 'function') try { const e = JSON.parse(new TextDecoder('utf-8').decode(n.response)); n.response = e; } catch (e) { const t = n.response; n.response = { originalBody: t, message: 'Failed to parse JSON problem type response body.', parseError: e }; } if (o instanceof Error && (this._underlyingError = o), this._response = n || (H(o) ? o.response : void 0), this._additionalData = r, this._message = t, this.message = (typeof e === 'string' && e !== '' ? `[${e}] ` : '') + (this._message || ''), Object.setPrototypeOf(this, j.prototype), Error.captureStackTrace)Error.captureStackTrace(this, j); else try { const e = new Error(); if (e.name = this.name, e.stack) { const t = e.stack.split('\n'); t.length > 0 && t.splice(1, 1), this.stack = t.join('\n'); } } catch (e) {} }

    get response() { return this._response; }

    get problemType() { let e; if (((e = this._response) === null || void 0 === e ? void 0 : e.headers['content-type']) === 'application/problem+json') return this._response.response.type; }

    get underlyingError() { return this._underlyingError; }

    get additionalData() { return this._additionalData; }

    set additionalData(e) { this._additionalData = e; }

    get failedComponents() { return this._additionalData.failedComponents; }

    static wrapError(e, o, n, r) { let a; let i; let s; let c; if (n && K[n.code]) return n; if (r && typeof r === 'object') { const _ = r.statusCode; const u = _ === 403 && (((s = (i = (a = r.response) === null || void 0 === a ? void 0 : a.message) === null || void 0 === i ? void 0 : i.match(/code=(\d+.\d+)/)) === null || void 0 === s ? void 0 : s[1]) === '403.1' || ((c = r.response) === null || void 0 === c ? void 0 : c.type) === t.lc.QUOTA_EXCEEDED); if (_ >= 500 && _ < 600 || u)_ === 501 ? (e = I, o = 'Unimplemented request') : _ === 507 || u ? (e = S, o = 'Quota exceeded') : (e = y, o = 'Server error'); else if (n instanceof j && e === n.code && n.code === this.UNEXPECTED_RESPONSE) return n; } return new j(e, o, n, r); }

    toString() { return `${this.name}: ${this.message}`; }

    static networkError(e, t, o) { return j.wrapError(T, e, t, o); }

    static unexpectedResponse(e, t, o) { return j.wrapError(d, e, t, o); }
  } function H(e) { return !(!e || typeof e !== 'object') && e.name === 'AdobeDCXError'; }j.ABORTED = x, j.INSECURE_REDIRECT = z, j.TOO_MANY_REDIRECTS = B, j.INVALID_JSON = r, j.READ_ONLY = a, j.INVALID_PARAMS = i, j.INVALID_DATA = c, j.DUPLICATE_VALUE = _, j.NO_BASE_BRANCH_DATA = u, j.INVALID_STATE = l, j.DELETED_COMPOSITE = E, j.INCOMPLETE_COMPOSITE = p, j.UNEXPECTED_RESPONSE = d, j.NETWORK_ERROR = T, j.COMPONENT_DOWNLOAD_ERROR = m, j.COMPONENT_UPLOAD_ERROR = O, j.COMPONENT_MODIFIED_ERROR = f, j.UPDATE_CONFLICT = g, j.NO_COMPOSITE = h, j.ALREADY_EXISTS = C, j.SERVICE_IS_INACTIVE = N, j.EXCEEDS_QUOTA = S, j.NOT_IMPLEMENTED = I, j.RETRYABLE_SERVER_ERROR = y, j.TIMED_OUT = A, j.UNEXPECTED = U, j.TERMINATED_INPUTSTREAM = R, j.WRONG_ENDPOINT = b, j.OUT_OF_SPACE = v, j.FILE_EXISTS_IN_CLOUD = M, j.ASSET_NOT_FOUND = D, j.COMPOSITE_NOT_FOUND = w, j.NOT_FOUND = L, j.UNAUTHORIZED = P, j.FORBIDDEN = F, j.PRECONDITION_FAILED = s, j.RESOURCE_NOT_READY = Y; new Map([[400, { code: d, message: 'Bad request' }], [401, { code: P, message: 'Unauthorized' }], [403, { code: F, message: 'Forbidden' }], [404, { code: L, message: 'Not found' }], [405, { code: k, message: 'The user is authorized to act on this resource, but cannot use the specified method.' }], [406, { code: V, message: 'Unable to obtain resource in a content type matching the Accept header or rendition type parameter.' }], [409, { code: C, message: 'Already exists' }], [412, { code: s, message: 'Precondition failed' }], [501, { code: I, message: 'Not implemented' }], [507, { code: S, message: 'Exceeds quota' }], [509, { code: G, message: 'Bandwidth limit exceeded' }]]), new Map(Object.entries({ [t.lc.ASSET_MOVED]: { code: n, message: 'Asset moved to a different region while operation was in progress' }, [t.lc.COMPOSITE_INTEGRITY]: { code: p, message: 'Incomplete composite. invoke missingComponentsFromError with this error for more information.' }, [t.lc.PARTIAL_ASSET]: { code: h, message: 'Asset is partially created. No Manifest found' } })); t.ne = H;
},
567: (e, t, o) => { e.exports = `${o.p}55e9c5051490bf0fbac9.html`; },
253: (e, t, o) => { e.exports = `${o.p}2258c539ad451e8c3813.html`; },
829: (e, t, o) => { e.exports = `${o.p}f5dc5ebe04b6d0b1375b.html`; } }; const t = {}; function o(n) { const r = t[n]; if (void 0 !== r) return r.exports; const a = t[n] = { exports: {} }; return e[n](a, a.exports, o), a.exports; }o.m = e, o.d = (e, t) => { for (const n in t)o.o(t, n) && !o.o(e, n) && Object.defineProperty(e, n, { enumerable: !0, get: t[n] }); }, o.g = (function () { if (typeof globalThis === 'object') return globalThis; try { return this || new Function('return this')(); } catch (e) { if (typeof window === 'object') return window; } }()), o.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), o.r = (e) => { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 }); }, (() => { let e; if (typeof import.meta.url === 'string' && (e = import.meta.url), !e) throw new Error('Automatic publicPath is not supported in this browser'); e = e.replace(/#.*$/, '').replace(/\?.*$/, '').replace(/\/[^\/]+$/, '/'), o.p = e; })(), o.b = document.baseURI || self.location.href; const n = {}; (() => {
  o.d(n, { qp: () => r, K3: () => i, g6: () => Bt, L$: () => Vt, QQ: () => a, vC: () => oo, gT: () => e, a3: () => eo, Vf: () => kt, z: () => Ht, DD: () => Xt, Gc: () => ao, Te: () => Zt, fS: () => Ft, Wf: () => Wt, lc: () => zt, IT: () => $t, xn: () => Jt, a7: () => Qt, zh: () => to, e6: () => vt, lJ: () => Dt, z7: () => Lt, JP: () => wt, vm: () => Gt, Sd: () => qt, qX: () => ro, $e: () => Pt, ZP: () => io }); var e = {}; o.r(e), o.d(e, { AuthorizationStatus: () => i, BitRate: () => jt, BleedUnit: () => Bt, ButtonType: () => Vt, ColorPickerPlacement: () => oo, DeviceClass: () => eo, DialogResultType: () => kt, EditorPanel: () => Ht, ElementsTabs: () => Xt, FeatureType: () => Zt, FieldType: () => Ft, FileSizeLimitUnit: () => no, FrameRate: () => Kt, LinkOptions: () => Mt, MediaTabs: () => Wt, MediaType: () => zt, PanelActionType: () => $t, PdfReturnUrlType: () => Jt, PlatformEnvironment: () => Qt, PlatformType: () => to, Range: () => vt, RenditionFormat: () => Dt, RenditionIntent: () => Lt, RenditionType: () => wt, RuntimeType: () => Gt, SettingType: () => qt, ToastVariant: () => xt, Variant: () => Pt, VideoResolution: () => Yt }); const t = (e) => import(e); var r = (function (e) { return e.themechange = 'themechange', e.localechange = 'localechange', e.formatchange = 'formatchange', e.reset = 'reset', e.dragstart = 'dragstart', e.dragend = 'dragend', e.dragcancel = 'dragcancel', e.accessTokenChange = 'accessTokenChange', e.documentIdAvailable = 'documentIdAvailable', e.documentLinkAvailable = 'documentLinkAvailable', e.documentPublishedLinkAvailable = 'documentPublishedLinkAvailable', e.documentTitleChange = 'documentTitleChange', e.documentExportAllowedChange = 'documentExportAllowedChange', e.internalMessage = 'internalMessage', e; }({})); var a = (function (e) { return e.colorChange = 'colorpicker-color-change', e.close = 'colorpicker-close', e; }({})); new URL(o(829), o.b).href, new URL(o(253), o.b).href, new URL(o(567), o.b).href; var i = (function (e) { return e.SUCCESS = 'SUCCESS', e.POPUP_OPENED = 'POPUP_OPENED', e.POPUP_BLOCKED = 'POPUP_BLOCKED', e.POPUP_CLOSED = 'POPUP_CLOSED', e.POPUP_TIMEOUT = 'POPUP_TIMEOUT', e.FAILED = 'FAILED', e.IFRAME_LOAD_FAILED = 'IFRAME_LOAD_FAILED', e; }({})); const s = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto); const c = new Uint8Array(16); function _() { if (!s) throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported'); return s(c); } const u = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i; const l = function (e) { return typeof e === 'string' && u.test(e); }; for (var E = [], p = 0; p < 256; ++p)E.push((p + 256).toString(16).substr(1)); const d = function (e, t, o) { const n = (e = e || {}).random || (e.rng || _)(); if (n[6] = 15 & n[6] | 64, n[8] = 63 & n[8] | 128, t) { o = o || 0; for (let r = 0; r < 16; ++r)t[o + r] = n[r]; return t; } return (function (e) { const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; const o = (`${E[e[t + 0]] + E[e[t + 1]] + E[e[t + 2]] + E[e[t + 3]]}-${E[e[t + 4]]}${E[e[t + 5]]}-${E[e[t + 6]]}${E[e[t + 7]]}-${E[e[t + 8]]}${E[e[t + 9]]}-${E[e[t + 10]]}${E[e[t + 11]]}${E[e[t + 12]]}${E[e[t + 13]]}${E[e[t + 14]]}${E[e[t + 15]]}`).toLowerCase(); if (!l(o)) throw TypeError('Stringified UUID is invalid'); return o; }(n)); }; const T = ['authorization', 'authtoken', 'servicetoken']; const m = o(585); Error.stackTraceLimit = 50; class O extends Error {
    get code() { return this._code; }

    get uuid() { return this._uuid || (this._uuid = d()), this._uuid; }

    set uuid(e) { this._uuid = e; }

    get isExpected() { return !!this._isExpected || this.previousError instanceof O && this.previousError.isExpected; }

    set isExpected(e) { this._isExpected = e; }

    hasErrorCode(e) { return this.code === e || this.previousError instanceof O && this.previousError.hasErrorCode(e); }

    findErrorBy(e) { return e(this) ? this : this.previousError instanceof O ? this.previousError.findErrorBy(e) : void 0; }

    getDataRepresentation(e = { skipStack: !1 }) { const t = { kind: 'HzError', code: this.code, message: this.message, stack: e.skipStack ? void 0 : this.stack, uuid: this.uuid, category: this.category, isExpected: this.isExpected, logMetadata: this.logMetadata }; return this.previousError && (this.previousError instanceof O ? t.previousErrorData = this.previousError.getDataRepresentation(e) : t.previousErrorData = { kind: 'Error', name: this.previousError.name, message: this.previousError.message, stack: e.skipStack ? void 0 : this.previousError.stack }), (function (e) { if (!e) return e; try { const t = (function (e) { try { const t = new Set(); return JSON.stringify(e, ((e, o) => { if (typeof e === 'string' && T.includes(e.toLowerCase())) return 'xxxxx'; if (o !== null) { if (o instanceof Date) return o.toISOString(); const e = typeof o; if (e === 'object' || o instanceof Array) { if (t.has(o)) return '--visited--'; t.add(o); } else { if (e === 'bigint') return o.toString(); if (e === 'number' && !Number.isFinite(o)) return o.toString(); } } return o; })); } catch (e) { return console.error('safeStringify() - Failed to stringify', e), ''; } }(e)); return t ? JSON.parse(t) : {}; } catch (e) { return console.error('safeCopy() - Failed to copy', e), {}; } }(t)); }

    _getErrorMessageWithCode(e) { return (0, m.ne)(e) ? `${e.name}: ${e.code}: ${e.message}` : `${e.name}: ${e.message}`; }

    _getDCXUnderlyingErrorMessage(e) { let t = this._getErrorMessageWithCode(e); return (0, m.ne)(e) && e.underlyingError && (t += `\nFrom underlying error: ${this._getDCXUnderlyingErrorMessage(e.underlyingError)}`), t; }

    _getDCXErrorFullStack(e) { let t = e.stack; return (0, m.ne)(e) && e.underlyingError && (t += `\nFrom underlying error: ${this._getDCXErrorFullStack(e.underlyingError)}`), t; }

    get fullStack() { let e = this.stack || ''; return this.previousError && (e += '\nFrom previous error: ', this.previousError instanceof O ? e += this.previousError.fullStack : (0, m.ne)(this.previousError) ? e += this._getDCXErrorFullStack(this.previousError) : e += this.previousError.stack), e.replace(/access_token=[0-9A-Za-z-._%=]+/, ''); }

    get messageWithCode() { return this.category ? `${this.category}: ${this.code}: ${this.message}` : `${this.code}: ${this.message}`; }

    get fullMessageWithCode() { let e = this.messageWithCode; return this.previousError && (e += '\nFrom previous error: ', this.previousError instanceof O ? e += this.previousError.fullMessageWithCode : (0, m.ne)(this.previousError) ? e += this._getDCXUnderlyingErrorMessage(this.previousError) : e += this.previousError), e; }

    get fullLogMetadata() { let e = this.logMetadata; if (this.previousError instanceof O) { const t = this.previousError.fullLogMetadata; t && (e = { ...this.logMetadata }, e.previousLogMetadata = t); } return e; }

    constructor(e, t, o) { super(t), this._code = e, this._isExpected = !1, this.name = `${e}Error`, o && (o instanceof Error ? this.previousError = o : (this.previousError = o.previousError, this.category = o.category, this.logMetadata = o.logMetadata, this.isExpected = Boolean(o.isExpected))); }
  } class f {
    get promise() { return this._promiseInUse = !0, this._promise; }

    get isSettled() { return this._isFulfilled || this._isRejected; }

    get isFulfilled() { return this._isFulfilled; }

    get isRejected() { return this._isRejected; }

    adopt(e) { return this._promiseInUse = !0, e.then(this._resolvePromise).catch(this._rejectPromise), this.promise; }

    adoptOnce(e) { return this._promiseInUse = !0, this._hasAdoptedOnce || (this.adopt(e()), this._hasAdoptedOnce = !0), this.promise; }

    resolve(e) { this._resolvePromise(e); }

    reject(e) { this._rejectPromise(e); }

    reset() { !this._isFulfilled && !this._isRejected && this._promiseInUse && this._rejectPromise && this._rejectPromise(new O('DeferredPromiseReset', 'Deferred was reset before result arrived')), this._isFulfilled = !1, this._isRejected = !1, this._hasAdoptedOnce = !1, this._promiseInUse = !1, this._promise = new Promise(((e, t) => { this._resolvePromise = (t) => { this._isFulfilled = !0, this._isRejected = !1, e(t); }, this._rejectPromise = (e) => { this._isRejected = !0, this._isFulfilled = !1, t(e); }; })); }

    constructor() { this._isFulfilled = !1, this._isRejected = !1, this._hasAdoptedOnce = !1, this._promiseInUse = !1, this.reset(); }
  } const g = class {
    attach(e) { this._appConfig instanceof f && this._appConfig.resolve(e), e.isLazySetting(this.name) && (this._deferred = new f()), this._appConfig = e; }

    get value() { if (this._appConfig instanceof f) { const e = `Setting not attached to appConfig: ${this.name}`; throw console.error('AppConfig', 'Setting', e), new O('Uninitialized', e, { logMetadata: { 'custom.clientFatal': !0 } }); } if (this._deferred) { const e = `This setting doesn't have a value yet, you should use getValue to wait for it: ${this.name}`; throw console.error('AppConfig', 'Setting', e), new O('Uninitialized', e, { logMetadata: { 'custom.clientFatal': !0 } }); } return this._appConfig._getSettingValue(this.name); }

    async getValue() { return this._appConfig instanceof f && await this._appConfig.promise, this._deferred && this._valueProvider ? (this._deferred.adoptOnce(this._valueProvider), this._deferred.promise.then(((e) => { delete this._deferred, this._appConfig._setSettingValue(this.name, e); })), this._deferred.promise) : this.value; }

    async initialized() { this._appConfig instanceof f && await this._appConfig.promise; }

    constructor(e) { this.name = e.name, this._appConfig = new f(); }
  }; const h = class extends g {constructor(e, t) { super({ name: e, valueDefault: t }); }}; const C = class extends g {constructor(e, t, o) { super({ name: e, valueDefault: t, envOverrides: o }); }}; const N = (function (e) { return e._example = '_example-draft-1', e._test = '_test-draft-1', e.debugComponentTransform = 'debug-component-transform-draft-1', e.interactions = 'interactions', e.variants = 'variants', e.stickyLayoutGrid = 'sticky-layout-grid-draft-1', e.filterFacelab = 'filter-facelab-draft-3', e.graphApiFilters = 'graph-api-filters-draft-1', e.neuralShapeEffects = 'neural-shape-effects-draft-1', e.charts = 'charts-draft-9', e.effectGraph = 'effect-graph-draft-2', e.filterVideoFoundationAdjustments = 'filter-acr-vf-adjustments-draft-2', e.autoCaptions = 'auto-captions-draft-4', e.animationClickSequences = 'animation-click-sequences-draft-2', e.styles = 'styles-draft-1', e.gradients = 'gradients-draft-1', e; }({})); const S = new Set(Object.values(N)); function I(e) { return Symbol.for(e); } new Set(globalThis && globalThis._hzTempDDMS || []); const y = new function e(t) { const o = this; o._currentContext = t ? new Map(t) : new Map(), o.getValue = function (e) { return o._currentContext.get(e); }, o.setValue = function (t, n) { const r = new e(o._currentContext); return r._currentContext.set(t, n), r; }, o.deleteValue = function (t) { const n = new e(o._currentContext); return n._currentContext.delete(t), n; }; }(); const A = function (e, t) { let o = typeof Symbol === 'function' && e[Symbol.iterator]; if (!o) return e; let n; let r; const a = o.call(e); const i = []; try { for (;(void 0 === t || t-- > 0) && !(n = a.next()).done;)i.push(n.value); } catch (e) { r = { error: e }; } finally { try { n && !n.done && (o = a.return) && o.call(a); } finally { if (r) throw r.error; } } return i; }; const U = function (e, t, o) { if (o || arguments.length === 2) for (var n, r = 0, a = t.length; r < a; r++)!n && r in t || (n || (n = Array.prototype.slice.call(t, 0, r)), n[r] = t[r]); return e.concat(n || Array.prototype.slice.call(t)); }; const R = (function () { function e() {} return e.prototype.active = function () { return y; }, e.prototype.with = function (e, t, o) { for (var n = [], r = 3; r < arguments.length; r++)n[r - 3] = arguments[r]; return t.call.apply(t, U([o], A(n), !1)); }, e.prototype.bind = function (e, t) { return t; }, e.prototype.enable = function () { return this; }, e.prototype.disable = function () { return this; }, e; }()); const b = typeof globalThis === 'object' ? globalThis : typeof self === 'object' ? self : typeof window === 'object' ? window : typeof o.g === 'object' ? o.g : {}; const v = '1.7.0'; const M = /^(\d+)\.(\d+)\.(\d+)(-(.+))?$/; const D = (function (e) { const t = new Set([e]); const o = new Set(); const n = e.match(M); if (!n) return function () { return !1; }; const r = +n[1]; const a = +n[2]; const i = +n[3]; if (n[4] != null) return function (t) { return t === e; }; function s(e) { return o.add(e), !1; } function c(e) { return t.add(e), !0; } return function (e) { if (t.has(e)) return !0; if (o.has(e)) return !1; const n = e.match(M); if (!n) return s(e); const _ = +n[1]; const u = +n[2]; const l = +n[3]; return n[4] != null || r !== _ ? s(e) : r === 0 ? a === u && i <= l ? c(e) : s(e) : a <= u ? c(e) : s(e); }; }(v)); const w = v.split('.')[0]; const L = Symbol.for(`opentelemetry.js.api.${w}`); const
    P = b; function F(e, t, o, n) { let r; void 0 === n && (n = !1); const a = P[L] = (r = P[L]) !== null && void 0 !== r ? r : { version: v }; if (!n && a[e]) { var i = new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`); return o.error(i.stack || i.message), !1; } return a.version !== v ? (i = new Error(`@opentelemetry/api: Registration of version v${a.version} for ${e} does not match previously registered API v${v}`), o.error(i.stack || i.message), !1) : (a[e] = t, o.debug(`@opentelemetry/api: Registered a global for ${e} v${v}.`), !0); } function k(e) { let t; let o; const n = (t = P[L]) === null || void 0 === t ? void 0 : t.version; if (n && D(n)) return (o = P[L]) === null || void 0 === o ? void 0 : o[e]; } function V(e, t) { t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${v}.`); const o = P[L]; o && delete o[e]; } let G; const x = (function () { function e(e) { this._namespace = e.namespace || 'DiagComponentLogger'; } return e.prototype.debug = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; return B('debug', this._namespace, e); }, e.prototype.error = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; return B('error', this._namespace, e); }, e.prototype.info = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; return B('info', this._namespace, e); }, e.prototype.warn = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; return B('warn', this._namespace, e); }, e.prototype.verbose = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; return B('verbose', this._namespace, e); }, e; }()); function B(e, t, o) { const n = k('diag'); if (n) return o.unshift(t), n[e].apply(n, (function (e, t, o) { if (o || arguments.length === 2) for (var n, r = 0, a = t.length; r < a; r++)!n && r in t || (n || (n = Array.prototype.slice.call(t, 0, r)), n[r] = t[r]); return e.concat(n || Array.prototype.slice.call(t)); }([], (function (e, t) { let o = typeof Symbol === 'function' && e[Symbol.iterator]; if (!o) return e; let n; let r; const a = o.call(e); const i = []; try { for (;(void 0 === t || t-- > 0) && !(n = a.next()).done;)i.push(n.value); } catch (e) { r = { error: e }; } finally { try { n && !n.done && (o = a.return) && o.call(a); } finally { if (r) throw r.error; } } return i; }(o)), !1))); }!(function (e) { e[e.NONE = 0] = 'NONE', e[e.ERROR = 30] = 'ERROR', e[e.WARN = 50] = 'WARN', e[e.INFO = 60] = 'INFO', e[e.DEBUG = 70] = 'DEBUG', e[e.VERBOSE = 80] = 'VERBOSE', e[e.ALL = 9999] = 'ALL'; }(G || (G = {}))); let z; const Y = function (e, t) { let o = typeof Symbol === 'function' && e[Symbol.iterator]; if (!o) return e; let n; let r; const a = o.call(e); const i = []; try { for (;(void 0 === t || t-- > 0) && !(n = a.next()).done;)i.push(n.value); } catch (e) { r = { error: e }; } finally { try { n && !n.done && (o = a.return) && o.call(a); } finally { if (r) throw r.error; } } return i; }; const K = function (e, t, o) { if (o || arguments.length === 2) for (var n, r = 0, a = t.length; r < a; r++)!n && r in t || (n || (n = Array.prototype.slice.call(t, 0, r)), n[r] = t[r]); return e.concat(n || Array.prototype.slice.call(t)); }; const j = (function () { function e() { function e(e) { return function () { for (var t = [], o = 0; o < arguments.length; o++)t[o] = arguments[o]; const n = k('diag'); if (n) return n[e].apply(n, K([], Y(t), !1)); }; } const t = this; t.setLogger = function (e, o) { let n; let r; let a; if (void 0 === o && (o = { logLevel: G.INFO }), e === t) { const i = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'); return t.error((n = i.stack) !== null && void 0 !== n ? n : i.message), !1; } typeof o === 'number' && (o = { logLevel: o }); const s = k('diag'); const c = (function (e, t) { function o(o, n) { const r = t[o]; return typeof r === 'function' && e >= n ? r.bind(t) : function () {}; } return e < G.NONE ? e = G.NONE : e > G.ALL && (e = G.ALL), t = t || {}, { error: o('error', G.ERROR), warn: o('warn', G.WARN), info: o('info', G.INFO), debug: o('debug', G.DEBUG), verbose: o('verbose', G.VERBOSE) }; }((r = o.logLevel) !== null && void 0 !== r ? r : G.INFO, e)); if (s && !o.suppressOverrideMessage) { const _ = (a = (new Error()).stack) !== null && void 0 !== a ? a : '<failed to generate stacktrace>'; s.warn(`Current logger will be overwritten from ${_}`), c.warn(`Current logger will overwrite one already registered from ${_}`); } return F('diag', c, t, !0); }, t.disable = function () { V('diag', t); }, t.createComponentLogger = function (e) { return new x(e); }, t.verbose = e('verbose'), t.debug = e('debug'), t.info = e('info'), t.warn = e('warn'), t.error = e('error'); } return e.instance = function () { return this._instance || (this._instance = new e()), this._instance; }, e; }()); const H = function (e, t) { let o = typeof Symbol === 'function' && e[Symbol.iterator]; if (!o) return e; let n; let r; const a = o.call(e); const i = []; try { for (;(void 0 === t || t-- > 0) && !(n = a.next()).done;)i.push(n.value); } catch (e) { r = { error: e }; } finally { try { n && !n.done && (o = a.return) && o.call(a); } finally { if (r) throw r.error; } } return i; }; const W = function (e, t, o) { if (o || arguments.length === 2) for (var n, r = 0, a = t.length; r < a; r++)!n && r in t || (n || (n = Array.prototype.slice.call(t, 0, r)), n[r] = t[r]); return e.concat(n || Array.prototype.slice.call(t)); }; const X = 'context'; const $ = new R(); const J = (function () { function e() {} return e.getInstance = function () { return this._instance || (this._instance = new e()), this._instance; }, e.prototype.setGlobalContextManager = function (e) { return F(X, e, j.instance()); }, e.prototype.active = function () { return this._getContextManager().active(); }, e.prototype.with = function (e, t, o) { for (var n, r = [], a = 3; a < arguments.length; a++)r[a - 3] = arguments[a]; return (n = this._getContextManager()).with.apply(n, W([e, t, o], H(r), !1)); }, e.prototype.bind = function (e, t) { return this._getContextManager().bind(e, t); }, e.prototype._getContextManager = function () { return k(X) || $; }, e.prototype.disable = function () { this._getContextManager().disable(), V(X, j.instance()); }, e; }()); const Z = J.getInstance(); const q = j.instance(); const Q = (z = function (e, t) { return z = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t; } || function (e, t) { for (const o in t)Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]); }, z(e, t); }, function (e, t) { if (typeof t !== 'function' && t !== null) throw new TypeError(`Class extends value ${String(t)} is not a constructor or null`); function o() { this.constructor = e; }z(e, t), e.prototype = t === null ? Object.create(t) : (o.prototype = t.prototype, new o()); }); const ee = (function () { function e() {} return e.prototype.createHistogram = function (e, t) { return le; }, e.prototype.createCounter = function (e, t) { return ue; }, e.prototype.createUpDownCounter = function (e, t) { return Ee; }, e.prototype.createObservableGauge = function (e, t) { return de; }, e.prototype.createObservableCounter = function (e, t) { return pe; }, e.prototype.createObservableUpDownCounter = function (e, t) { return Te; }, e.prototype.addBatchObservableCallback = function (e, t) {}, e.prototype.removeBatchObservableCallback = function (e) {}, e; }()); const te = function () {}; const oe = (function (e) { function t() { return e !== null && e.apply(this, arguments) || this; } return Q(t, e), t.prototype.add = function (e, t) {}, t; }(te)); const ne = (function (e) { function t() { return e !== null && e.apply(this, arguments) || this; } return Q(t, e), t.prototype.add = function (e, t) {}, t; }(te)); const re = (function (e) { function t() { return e !== null && e.apply(this, arguments) || this; } return Q(t, e), t.prototype.record = function (e, t) {}, t; }(te)); const ae = (function () { function e() {} return e.prototype.addCallback = function (e) {}, e.prototype.removeCallback = function (e) {}, e; }()); const ie = (function (e) { function t() { return e !== null && e.apply(this, arguments) || this; } return Q(t, e), t; }(ae)); const se = (function (e) { function t() { return e !== null && e.apply(this, arguments) || this; } return Q(t, e), t; }(ae)); const ce = (function (e) { function t() { return e !== null && e.apply(this, arguments) || this; } return Q(t, e), t; }(ae)); const _e = new ee(); var ue = new oe(); var le = new re(); var Ee = new ne(); var pe = new ie(); var de = new se(); var Te = new ce(); const me = new (function () { function e() {} return e.prototype.getMeter = function (e, t, o) { return _e; }, e; }())(); const Oe = 'metrics'; const fe = (function () { function e() {} return e.getInstance = function () { return this._instance || (this._instance = new e()), this._instance; }, e.prototype.setGlobalMeterProvider = function (e) { return F(Oe, e, j.instance()); }, e.prototype.getMeterProvider = function () { return k(Oe) || me; }, e.prototype.getMeter = function (e, t, o) { return this.getMeterProvider().getMeter(e, t, o); }, e.prototype.disable = function () { V(Oe, j.instance()); }, e; }()).getInstance(); const ge = (function () { function e() {} return e.prototype.inject = function (e, t) {}, e.prototype.extract = function (e, t) { return e; }, e.prototype.fields = function () { return []; }, e; }()); const he = { get(e, t) { if (e != null) return e[t]; }, keys(e) { return e == null ? [] : Object.keys(e); } }; const Ce = { set(e, t, o) { e != null && (e[t] = o); } }; const Ne = I('OpenTelemetry Baggage Key'); function Se(e) { return e.getValue(Ne) || void 0; } function Ie() { return Se(J.getInstance().active()); } function ye(e, t) { return e.setValue(Ne, t); } function Ae(e) { return e.deleteValue(Ne); } const Ue = function (e) { const t = typeof Symbol === 'function' && Symbol.iterator; const o = t && e[t]; let n = 0; if (o) return o.call(e); if (e && typeof e.length === 'number') return { next() { return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e }; } }; throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.'); }; const Re = (function () { function e(e) { this._entries = e ? new Map(e) : new Map(); } return e.prototype.getEntry = function (e) { const t = this._entries.get(e); if (t) return { ...t }; }, e.prototype.getAllEntries = function () { return Array.from(this._entries.entries()).map(((e) => { const t = (function (e, t) { let o = typeof Symbol === 'function' && e[Symbol.iterator]; if (!o) return e; let n; let r; const a = o.call(e); const i = []; try { for (;(void 0 === t || t-- > 0) && !(n = a.next()).done;)i.push(n.value); } catch (e) { r = { error: e }; } finally { try { n && !n.done && (o = a.return) && o.call(a); } finally { if (r) throw r.error; } } return i; }(e, 2)); return [t[0], t[1]]; })); }, e.prototype.setEntry = function (t, o) { const n = new e(this._entries); return n._entries.set(t, o), n; }, e.prototype.removeEntry = function (t) { const o = new e(this._entries); return o._entries.delete(t), o; }, e.prototype.removeEntries = function () { for (var t, o, n = [], r = 0; r < arguments.length; r++)n[r] = arguments[r]; const a = new e(this._entries); try { for (var i = Ue(n), s = i.next(); !s.done; s = i.next()) { const c = s.value; a._entries.delete(c); } } catch (e) { t = { error: e }; } finally { try { s && !s.done && (o = i.return) && o.call(i); } finally { if (t) throw t.error; } } return a; }, e.prototype.clear = function () { return new e(); }, e; }()); function be(e) { return void 0 === e && (e = {}), new Re(new Map(Object.entries(e))); }j.instance(); let ve; const Me = 'propagation'; const De = new ge(); const we = (function () { function e() { this.createBaggage = be, this.getBaggage = Se, this.getActiveBaggage = Ie, this.setBaggage = ye, this.deleteBaggage = Ae; } return e.getInstance = function () { return this._instance || (this._instance = new e()), this._instance; }, e.prototype.setGlobalPropagator = function (e) { return F(Me, e, j.instance()); }, e.prototype.inject = function (e, t, o) { return void 0 === o && (o = Ce), this._getGlobalPropagator().inject(e, t, o); }, e.prototype.extract = function (e, t, o) { return void 0 === o && (o = he), this._getGlobalPropagator().extract(e, t, o); }, e.prototype.fields = function () { return this._getGlobalPropagator().fields(); }, e.prototype.disable = function () { V(Me, j.instance()); }, e.prototype._getGlobalPropagator = function () { return k(Me) || De; }, e; }()); const Le = we.getInstance(); !(function (e) { e[e.NONE = 0] = 'NONE', e[e.SAMPLED = 1] = 'SAMPLED'; }(ve || (ve = {}))); const Pe = '0000000000000000'; const Fe = '00000000000000000000000000000000'; const ke = { traceId: Fe, spanId: Pe, traceFlags: ve.NONE }; const Ve = (function () { function e(e) { void 0 === e && (e = ke), this._spanContext = e; } return e.prototype.spanContext = function () { return this._spanContext; }, e.prototype.setAttribute = function (e, t) { return this; }, e.prototype.setAttributes = function (e) { return this; }, e.prototype.addEvent = function (e, t) { return this; }, e.prototype.setStatus = function (e) { return this; }, e.prototype.updateName = function (e) { return this; }, e.prototype.end = function (e) {}, e.prototype.isRecording = function () { return !1; }, e.prototype.recordException = function (e, t) {}, e; }()); const Ge = I('OpenTelemetry Context Key SPAN'); function xe(e) { return e.getValue(Ge) || void 0; } function Be() { return xe(J.getInstance().active()); } function ze(e, t) { return e.setValue(Ge, t); } function Ye(e) { return e.deleteValue(Ge); } function Ke(e, t) { return ze(e, new Ve(t)); } function je(e) { let t; return (t = xe(e)) === null || void 0 === t ? void 0 : t.spanContext(); } const He = /^([0-9a-f]{32})$/i; const We = /^[0-9a-f]{16}$/i; function Xe(e) { return o = e.traceId, He.test(o) && o !== Fe && (t = e.spanId, We.test(t) && t !== Pe); let t; let o; } function $e(e) { return new Ve(e); } const Je = J.getInstance(); const Ze = (function () { function e() {} return e.prototype.startSpan = function (e, t, o) { if (void 0 === o && (o = Je.active()), Boolean(t == null ? void 0 : t.root)) return new Ve(); let n; const r = o && je(o); return typeof (n = r) === 'object' && typeof n.spanId === 'string' && typeof n.traceId === 'string' && typeof n.traceFlags === 'number' && Xe(r) ? new Ve(r) : new Ve(); }, e.prototype.startActiveSpan = function (e, t, o, n) { let r; let a; let i; if (!(arguments.length < 2)) { arguments.length === 2 ? i = t : arguments.length === 3 ? (r = t, i = o) : (r = t, a = o, i = n); const s = a != null ? a : Je.active(); const c = this.startSpan(e, r, s); const _ = ze(s, c); return Je.with(_, i, void 0, c); } }, e; }()); const qe = new Ze(); const Qe = (function () { function e(e, t, o, n) { this._provider = e, this.name = t, this.version = o, this.options = n; } return e.prototype.startSpan = function (e, t, o) { return this._getTracer().startSpan(e, t, o); }, e.prototype.startActiveSpan = function (e, t, o, n) { const r = this._getTracer(); return Reflect.apply(r.startActiveSpan, r, arguments); }, e.prototype._getTracer = function () { if (this._delegate) return this._delegate; const e = this._provider.getDelegateTracer(this.name, this.version, this.options); return e ? (this._delegate = e, this._delegate) : qe; }, e; }()); const et = new (function () { function e() {} return e.prototype.getTracer = function (e, t, o) { return new Ze(); }, e; }())(); const tt = (function () { function e() {} return e.prototype.getTracer = function (e, t, o) { let n; return (n = this.getDelegateTracer(e, t, o)) !== null && void 0 !== n ? n : new Qe(this, e, t, o); }, e.prototype.getDelegate = function () { let e; return (e = this._delegate) !== null && void 0 !== e ? e : et; }, e.prototype.setDelegate = function (e) { this._delegate = e; }, e.prototype.getDelegateTracer = function (e, t, o) { let n; return (n = this._delegate) === null || void 0 === n ? void 0 : n.getTracer(e, t, o); }, e; }()); const ot = 'trace'; const nt = { context: Z, diag: q, metrics: fe, propagation: Le, trace: (function () { function e() { this._proxyTracerProvider = new tt(), this.wrapSpanContext = $e, this.isSpanContextValid = Xe, this.deleteSpan = Ye, this.getSpan = xe, this.getActiveSpan = Be, this.getSpanContext = je, this.setSpan = ze, this.setSpanContext = Ke; } return e.getInstance = function () { return this._instance || (this._instance = new e()), this._instance; }, e.prototype.setGlobalTracerProvider = function (e) { const t = F(ot, this._proxyTracerProvider, j.instance()); return t && this._proxyTracerProvider.setDelegate(e), t; }, e.prototype.getTracerProvider = function () { return k(ot) || this._proxyTracerProvider; }, e.prototype.getTracer = function (e, t) { return this.getTracerProvider().getTracer(e, t); }, e.prototype.disable = function () { V(ot, j.instance()), this._proxyTracerProvider = new tt(); }, e; }()).getInstance() }; class rt extends Error {constructor(e) { super(), this.response = e; }} const at = { maxAttempts: 5, delay: 100, shouldUseServiceDelay: !1 }; const it = new C('use-floodgate-on-aep', !1, { prod: !1 }); const st = new h('floodgateApiKey', ''); const ct = new h('floodgateClientId', 'horizon-platform'); const _t = new C('floodgateFeaturesUrl', 'https://p13n-stage.adobe.io/fg/api/v3/feature', { prod: 'https://p13n.adobe.io/fg/api/v3/feature' }); const ut = new C('floodgateSandbox', 'xlg-stage', { prod: 'xlg-prod' }); const lt = new h('floodgateOrgId', '9E1005A551ED61CA0A490D45@AdobeOrg'); const Et = new h('rrEntryName', ''); const pt = new h('rrEntryConfigName', ''); const dt = new h('rrTrafficTargetName', ''); const Tt = new h('rrBuildSha', ''); const mt = new h('rrConfigSyncInterval', 10); const Ot = new h('consoleLogLevel-AppConfig', 'info'); const ft = { enabledLogLevelAppConfig: new h('enabledLogLevel-AppConfig', 'info'), consoleLogLevelAppConfig: Ot, floodgateApiKey: st, floodgateOrgId: lt, floodgateSandbox: ut, floodgateClientId: ct, floodgateFeaturesUrl: _t, rrEntryName: Et, rrEntryConfigName: pt, rrTrafficTargetName: dt, rrBuildSha: Tt, rrConfigSyncInterval: mt, enabledLogLevelFloodgateConnector: new h('enabledLogLevel-FloodgateConnector', 'info'), consoleLogLevelFloodgateConnector: new h('consoleLogLevel-FloodgateConnector', 'info'), cdnCacheMaxAge: new h('max-age', 3600), cdnCacheSMaxAge: new h('s-maxage', 60), cdnCacheStaleWhileRevalidate: new h('stale-while-revalidate', 60), cdnCacheStaleIfError: new h('stale-if-error', 86400), useFloodgateOnAEP: it }; class gt {}gt.UI = 'ui', gt.AUTHORING = 'authoring', gt.RENDERING = 'rendering', gt.DEFAULT = 'default'; class ht {
    static markBegin(e) { const t = `${e.measureName}:begin`; performance.mark(t); }

    static markEndAndMeasure(e) { const t = `${e.measureName}:end`; return performance.mark(t), performance.measure(e.measureName, ht._getMeasureDetail(e)); }

    static _getMeasureDetail(e) { const t = { start: `${e.measureName}:begin`, end: `${e.measureName}:end` }; return t.detail = { devtools: { track: e.trackName || ht._getTrackName(), dataType: 'track-entry', tooltipText: e.tooltipText || e.measureName } }, t; }

    static _getTrackName() { if (ht._isMainThread()) return gt.UI; const e = ht._getThreadName(); return e.includes('authoring') ? gt.AUTHORING : e.includes('rendering') || e.includes('renderer') ? gt.RENDERING : (console.warn('No track name found'), gt.DEFAULT); }

    static _isMainThread() { return typeof window !== 'undefined' && typeof self !== 'undefined' && self === window; }

    static _getThreadName() { return typeof self !== 'undefined' && self.name ? self.name : typeof globalThis !== 'undefined' && globalThis.threadName ? globalThis.threadName : (console.warn('No thread name found'), 'unknown'); }
  } class Ct {
    static getInstance(e) { return void 0 === Ct._instance && (Ct._instance = new Ct(e)), Ct._instance; }

    _createFloodgateConnector() {
      return new class {
        async getEnabledFeatures(e) { return await this._initPromise, this._getAllEnabledFeatures(e); }

        async _init() { this._host = await this._appConfig.getHost(), this._apiKey = ft.floodgateApiKey.value, this._clientId = ft.floodgateClientId.value, this._featuresUrl = ft.floodgateFeaturesUrl.value, this._fgOrgId = ft.floodgateOrgId.value, this._fgSandbox = ft.floodgateSandbox.value, this._useFloodgateOnAEP = ft.useFloodgateOnAEP.value; }

        async _getAllEnabledFeatures(e) { try { const t = await this._callFeaturesApi(e); return this._extractFeaturesFromApiResponse(t); } catch (e) { return this._categoryLogger?.warn('Caught error while trying to obtain FloodGate features', e), {}; } }

        _extractFeaturesFromApiResponse(e) { if (void 0 === e.releases) return {}; const t = {}; return e.releases.forEach(((e) => { e.features.forEach(((e) => t[e] = !0)); })), t; }

        async _callFeaturesApi(e) { const t = this._getFeaturesUrl(); const o = await this._getRequestHeaders(e); const n = { measureName: 'floodgate-features-api' }; ht.markBegin(n); const r = performance.now(); const a = (function (e, t, o) { const n = { ...at, ...t }; if (typeof n.maxAttempts !== 'number' || n.maxAttempts < 1 || Math.floor(n.maxAttempts) !== n.maxAttempts) throw new Error(`retry: maxAttempts must be an integer, at least 1, found ${n.maxAttempts}`); let r = 0; let a = 0; const i = n.progressMessagePrefix || e.name; const s = (...t) => ((...t) => { if (n.timeoutInterval) { let a; let s = 0; const c = new Promise(((e, t) => { const c = { timedOutOperation: i, attemptNumber: r, maxAttempts: n.maxAttempts, timeoutInterval: n.timeoutInterval, ...o }; s = setTimeout((() => { t(new O('OperationTimeout', 'Operation Timeout', { logMetadata: c })); }), n.timeoutInterval), a = e; })); return Promise.race([e(...t), c]).then(((e) => (a(), e))).finally((() => { clearTimeout(s); })); } return e(...t); })(...t).then(((e) => (n.progressCallback && r > 0 && n.progressCallback(`${i} succeeded after retries`, { failedAttempts: r, totalDelay: a }), e))).catch((async (e) => { if (r++, r === n.maxAttempts) return n.progressCallback && n.progressCallback(`${i} failed after retries, giving up.`, { failedAttempts: r, totalDelay: a }, e), Promise.reject(e); if (typeof n.shouldRetry === 'function') try { if (!await n.shouldRetry(e)) return Promise.reject(e); } catch (e) { return n.progressCallback && n.progressCallback(`shouldRetry of ${i} failed`, { failedAttempts: r, totalDelay: a }, e), Promise.reject(e); }let o = 0; if (n.shouldUseServiceDelay) { const t = e.response; t && (o = (function (e) { const t = e.get('retry-after'); let o = 0; if (t) { if (isNaN(t)) { const e = Date.parse(t) - Date.now(); e > 0 && (o = e); } else o = Number(t); o = Math.floor(1e3 * (o + (Math.random() + 1))); } return o; }(t.headers))); } if (o === 0 && (o = Math.floor(2 ** (r - 1) * n.delay * (Math.random() + 1))), typeof n.affectDelayHook === 'function') { const t = n.affectDelayHook(e); t && (t.type === 0 && (o = t.value), t.type === 1 && o < t.value && (o = Math.floor(t.value * (Math.random() + 1)))); } if (a += o, typeof n.preRetryHook === 'function') try { await n.preRetryHook(e); } catch (e) { return n.progressCallback && n.progressCallback(`preRetryHook of ${i} failed`, { failedAttempts: r, totalDelay: a, nextRetry: o }, e), Promise.reject(e); } return n.progressCallback && n.progressCallback(`${i} failed, trying again after delay.`, { failedAttempts: r, totalDelay: a, nextRetry: o }, e), (c = o, new Promise(((e) => { setTimeout(e, c); }))).then((() => s(...t))); let c; })); return s; }((() => this._host.fetch(t, { method: 'GET', headers: o })), { maxAttempts: 3, timeoutInterval: 5e3, shouldRetry: (e) => e.message.includes('Failed to fetch') })); const i = await a(); this._recordDuration(performance.now() - r); const s = ht.markEndAndMeasure(n); return this._categoryLogger?.debug('Floodgate API call duration: ', s?.duration, 'ms'), await i.json(); }

        _recordDuration(e) { const t = this._appConfig.getOtelServiceName(); t && (this._histogramMeter || (this._histogramMeter = nt.metrics.getMeter(t).createHistogram('hz_prx_floodgate_api_duration_ms')), this._histogramMeter.record(e)); }

        _getFeaturesUrl() { let e = `${this._featuresUrl}?clientId=${this._clientId}`; return !0 === this._useFloodgateOnAEP && (e = `${e}&mergeFlags=true`), e; }

        async _getRequestHeaders(e) { const t = { 'x-api-key': this._apiKey, 'Content-Type': 'application/json' }; return !0 === this._useFloodgateOnAEP && (t['x-gw-ims-org-id'] = this._fgOrgId, t['x-sandbox-name'] = this._fgSandbox), void 0 !== e && (t.Authorization = `Bearer ${e}`), t; }

        constructor(e) { this._appConfig = e, this._appConfig.attach(ft), this._categoryLogger = this._appConfig.categoryLogger(), this._initPromise = this._init(); }
      }(this._appConfig);
    }

    async syncNow() { return void 0 === this._onDemandSyncPromise && (this._onDemandSyncPromise = new Promise(((e, t) => { setTimeout((async () => { try { await this._resyncFeatures(!1), e(); } catch (e) { t(e); } finally { this._onDemandSyncPromise = void 0; } })); }))), this._onDemandSyncPromise; }

    async getFeatureState(e) { return (await this._initFloodgatePromise)[e] ?? !1; }

    registerForUpdates(e, t) { if (!0 !== e.floodgateData.dynamic) throw new Error(`Cannot register feature "${e.name}" for updates because it is not dynamic.`); this._updateListeners[e.name] = t, this._resyncScheduled || this._scheduleResync(); }

    async _initEnabledFeatures() { const e = await this._getAccessToken(); const t = await this._floodgateConnector.getEnabledFeatures(e); this._resolveFloodgateFeatures(t); }

    async _resyncFeatures(e = !0) { const t = await this._getAccessToken(); void 0 === t && this._appConfig?.categoryLogger()?.warn('AppConfig: Floodgate API will be called without an access token.'); const o = await this._floodgateConnector.getEnabledFeatures(t); for (const e of Object.keys(this._updateListeners)) { const t = o[e] ?? !1; try { this._updateListeners[e](t); } catch (o) { this._appConfig?.categoryLogger()?.warn(`An error was caught when trying to update feature "${e}" with state "${t}":`, o); } }e && this._scheduleResync(); }

    _scheduleResync() { setTimeout((async () => { this._resyncFeatures(); }), Ct.RESYNC_INTERVAL), this._resyncScheduled = !0; }

    async _getAccessToken(e = 5e3) { const t = new Promise(((t, o) => { setTimeout((() => t(void 0)), e); })); const o = await Promise.race([t, this._appConfig.getAccessTokenProvider()]); if (void 0 !== o) { const e = await o.getAccessTokenValue(); if (void 0 === e) return e; const t = e.split('.'); if (t && t.length === 3) try { const o = atob(t[1]); return JSON.parse(o).atp === 'guest' ? void 0 : e; } catch (t) { return e; } return e; } this._appConfig?.categoryLogger()?.warn(`AppConfig: No IMS access token provider received in ${e} ms`); }

    constructor(e) { this._resyncScheduled = !1, this._updateListeners = {}, this._appConfig = e, this._initFloodgatePromise = new Promise(((e, t) => { this._resolveFloodgateFeatures = e; })), this._floodgateConnector = this._createFloodgateConnector(), this._initEnabledFeatures(); }
  }Ct.RESYNC_INTERVAL = 3e5; const Nt = class {
    attach(e) { if (this._appConfig instanceof f && this._appConfig.resolve(e), void 0 !== this._cachedValue && this.resetCachedValue(), this._appConfig = e, void 0 === this._delayFeatureDetails) { const e = this._appConfig.getUrlParams(); e && (this._delayFeatureDetails = { logConsole: e.get('log-floodgate-to-console') === 'true', delayAllFloodgateFlags: e.get('delay-all-floodgate-flags') === 'true', delayedFlag: e.get('delay-flag') ?? '' }); } const t = (e.isPendingExperimentResolution(this.name) || e.isPendingRolloutResolution(this.name)) && void 0 === this._pendingInitialization; const o = e._getBrowserFlag(this.name); t && void 0 === o ? (this._pendingInitialization = new f(), e.registerListener(this.name, ((e) => { void 0 !== e && this._featureUpdated(); }))) : this._pendingInitialization?.isSettled && delete this._pendingInitialization, this.initialized(); }

    async isEnabled() { return await this.initialized(), this.enabled; }

    get enabled() { if (this._pendingInitialization) { const e = `The feature flag ${this.name} is not initialized yet, please check it asynchronously by using "initialized()"`; throw console.error('AppConfig', 'Feature', e), this._increaseErrorMetric(), new O('Uninitialized', e, { logMetadata: { 'custom.clientFatal': !0 } }); } return this._getEnabled(); }

    resetCachedValue() { this._cachedValue = void 0; }

    _increaseErrorMetric() { if (!this._appConfig || this._appConfig instanceof f) return; const e = this._appConfig.getOtelServiceName(); if (!e) return; const t = this._appConfig.getSettingUnsafe('envName') ?? 'unknown'; nt.metrics.getMeter(e).createCounter('hz_prx_feature_flag_error_count').add(1, { featureFlagName: this.name, envName: t }); }

    _getEnabled() { if (void 0 !== this._cachedValue) return this._cachedValue; if (this._appConfig instanceof f) { const e = `Feature not attached to appConfig: ${this.name}`; throw console.error('AppConfig', 'Feature', e), new O('Uninitialized', e, { logMetadata: { 'custom.clientFatal': !0 } }); }let e = () => {}; this.floodgateData && (e = () => { if (!this.floodgateData.syncedWithFloodgate) { const e = 'Floodgate features can not be checked before feature.initialized(), or await feature.isEnabled()'; throw console.error('AppConfig', 'Feature', e), new O('Uninitialized', e, { logMetadata: { 'custom.clientFatal': !0 } }); } return this.floodgateData.valueFromFloodgate; }); const t = this._appConfig._getFeatureEnabled(this.name, e); return this.floodgateData && this.floodgateData.dynamic || (this._cachedValue = t), t; }

    async initialized() { const e = []; return this._pendingInitialization && e.push(this._pendingInitialization.promise), this.floodgateData && (void 0 === this.floodgateData.initFromFloodgatePromise && (this.floodgateData.initFromFloodgatePromise = this._initializeFromFloodgate()), e.push(this._delayFeatureIfNeeded()), e.push(this.floodgateData.initFromFloodgatePromise)), Promise.all(e); }

    async _initializeFromFloodgate() { this._appConfig instanceof f && await this._appConfig.promise, this.floodgateData && await this._syncWithFloodgate(); }

    _featureUpdated() { this._pendingInitialization instanceof f && (this._pendingInitialization.resolve(!0), delete this._pendingInitialization), this._callbacks && this._callbacks.forEach(((e) => { e(this.enabled); })); }

    onUpdate(e) { this._callbacks = this._callbacks ?? [], this._callbacks.push(e); }

    get _floodgateSyncer() { return Ct.getInstance(this._appConfig); }

    async _syncWithFloodgate() { this._appConfig instanceof f && await this._appConfig.promise; const e = this.floodgateData.floodgateKey ?? this.name; this.floodgateData.valueFromFloodgate = await this._floodgateSyncer.getFeatureState(e), this.floodgateData.syncedWithFloodgate = !0, this.floodgateData.dynamic && (this._featureUpdated(), this._floodgateSyncer.registerForUpdates(this, ((e) => { this._updateFloodgateState(e); }))); }

    _updateFloodgateState(e) { const t = this.enabled; this.floodgateData.valueFromFloodgate = e, this.enabled !== t && this._featureUpdated(); }

    async _delayFeatureIfNeeded() { this._delayFeatureDetails && (this._delayFeatureDetails.logConsole ? console.log(`FloodgateFeature check ${this.name}`) : (this._delayFeatureDetails.delayAllFloodgateFlags || this._delayFeatureDetails.delayedFlag === this.name) && await new Promise(((e) => setTimeout(e, 5e3)))); }

    constructor(e) { this.name = e.name, e.checkFloodgate && (this.floodgateData = { syncedWithFloodgate: !1 }, e.floodgateKey && (this.floodgateData.floodgateKey = e.floodgateKey), e.dynamic && (this.floodgateData.dynamic = e.dynamic)), this._appConfig = new f(); }
  }; new h('allowedSubframeOrigins', []), new h('allowedParentOrigins', []), new class extends Nt {
    async isEnabled() { if (this._appConfig instanceof f) { const e = `FeatureChecker not attached to appConfig: ${this.name}`; throw console.error('AppConfig', 'Feature', e), new O('Uninitialized', e, { logMetadata: { 'custom.clientFatal': !0 } }); } const e = this._appConfig.getFloodgateKeyOrName(this.name); return e && !this.floodgateData && (this.floodgateData = { floodgateKey: e, syncedWithFloodgate: !0 }), super.isEnabled(); }

    get enabled() { if (S.has(this.name)) throw new O('Uninitialized', `FeatureChecker cannot be used to check draft feature flags: ${this.name}`, { logMetadata: { 'custom.clientFatal': !0 } }); return super.enabled; }

    constructor(e) { super({ name: e, enabledDefault: !1 }); }
  }('use-android-bitmap-import'); const St = 'timeStart'; const It = 'timeEnd'; const yt = 'isFailure'; const At = (function (e) { return e.USER_SERVICE_CODE = 'user.service_code', e.USER_SERVICE_LEVEL = 'user.service_level', e.USER_ACCOUNT_TYPE = 'hz.user.account_type', e.EVENT_PKG_INGEST_TYPE = 'ingesttype', e.EVENT_PKG_PROJECT = 'project', e.EVENT_PKG_TIME = 'time', e.EVENT_PKG_ENVIRONMENT = 'environment', e.EVENT_PKG_DATA = 'data', e.OVERRIDE_PKG_PROJECT = 'override.ingest.project', e.EVENT_PAGENAME = 'event.pagename', e.EVENT_GUID = 'event.guid', e.EVENT_USER_AGENT = 'event.user_agent', e.EVENT_URL = 'event.url', e.EVENT_THREAD = 'custom.thread', e.EVENT_SOURCE = 'custom.source', e.EVENT_STATUS = 'custom.eventStatus', e.EVENT_INSTRUMENTATION_TYPE = 'custom.instrumentationType', e.EVENT_INSTRUMENTATION_FLAG = 'custom.instrumentationFlag', e.EVENT_FEATURE_NAME = 'custom.eventFeatureName', e.EVENT_FEATURE_FLOW_STATE = 'custom.eventFeatureFlowState', e.EVENT_MODIFIERS = 'custom.modifiers', e.EVENT_SOURCE_CLIENT_ID = 'source.client_id', e.EVENT_SOURCE_NAME = 'source.name', e.EVENT_SOURCE_VERSION = 'source.version', e.EVENT_MOBILE_APP_VERSION = 'hz.mobile_app_version', e.EVENT_NETWORK_TYPE = 'hz.network_type', e.EVENT_BUILD = 'event.build', e.EVENT_BUILD_BRANCH = 'custom.buildBranch', e.EVENT_BUNDLE_HASH = 'hz.event.bundle_hash', e.EVENT_OVERRIDES_CONFIGURATION_HASH = 'hz.event.overrides_configuration_hash', e.APP_CONFIG_OVERRIDES = 'custom.app_config_overrides', e.EVENT_ENVIRONMENT = 'custom.envName', e.EVENT_ENVIRONMENT_TYPE = 'custom.env', e.ENV_FW_NAME = 'env.fw.name', e.CUSTOM_EDITOR_IS_FOCUS_MODE = 'custom.editor.is_focus_mode', e.EVENT_CATEGORY = 'event.category', e.EVENT_SUBCATEGORY = 'event.subcategory', e.EVENT_TYPE = 'event.type', e.EVENT_SUBTYPE = 'event.subtype', e.EVENT_COUNT = 'event.count', e.EVENT_ACTION_CATEGORY = 'custom.actionCategory', e.EVENT_ACTION_NAME = 'custom.actionName', e.EVENT_WORKFLOW = 'event.workflow', e.EVENT_TIME_START = 'event.dts_start', e.EVENT_TIME_END = 'event.dts_end', e.EVENT_VALUE = 'event.value', e.EVENT_DURATION = 'custom.duration', e.EVENT_AVG_FRAME_DURATION = 'custom.averageFrameDuration', e.EVENT_AVG_RENDER_DURATION = 'custom.averageRenderDuration', e.EVENT_AVG_AUTHORING_DURATION = 'custom.averageAuthoringDuration', e.EVENT_USER_GUID = 'event.user_guid', e.EVENT_PROFILE_GUID = 'event.profile_guid', e.EVENT_SESSION_ID = 'event.session_guid', e.EVENT_MCID_GUID = 'event.mcid_guid', e.EVENT_CONTEXT_GUID = 'event.context_guid', e.EVENT_LOCALE = 'event.language', e.DISPLAYED_LANGUAGE = 'custom.displayedLanguage', e.PROFILE_COUNTRY = 'hz.user.profile_country', e.ACCESS_COUNTRY = 'hz.user.access_country', e.PWA_INSTALLATION_SOURCE = 'custom.pwa.installation_source', e.EVENT_APE_STATUS = 'hz.event.ape_status', e.EVENT_APE_DURATION = 'hz.event.ape_duration', e.EVENT_APE_TIME_SINCE_LAST_EVENT = 'hz.event.ape_time_since_last_event', e.EVENT_APE_GUID = 'hz.event.ape_guid', e.APE_START_TIME = 'ape_start_time', e.APE_LAST_EVENT_TIME = 'ape_last_event_time', e.ENTITLEMENT_TYPE = 'custom.user.entitlement_type_express', e.GEN_AI_TOTAL_CREDITS = 'custom.user.gen_ai.total_credits', e.USER_COMPLIMENTARY_PREMIUM = 'custom.user.complimentary_premium', e.SESSION_RECORDING_URL = 'hz.session.recording_url', e.CONTEXT_USER_ROLE = 'custom.userRole', e.CONTEXT_WEBVIEW_ROLE = 'custom.webviewRole', e.CONTEXT_INIT = 'context.init', e.CONTEXT_GUID = 'context.guid', e.CONTEXT_PARAMS = 'context.params', e.EVENT_REFERRER = 'event.referrer', e.EVENT_ERROR_CODE = 'event.error_code', e.EVENT_ERROR_DESC = 'event.error_desc', e.EVENT_ERROR_TYPE = 'event.error_type', e.UI_VIEW_TYPE = 'ui.view_type', e.UI_SEARCH_KEYWORD = 'ui.search_keyword', e.CONTENT_ID = 'content.id', e.CONTENT_IS_REPLACED_WITH_LINKED_ASSET = 'content.is.replaced.with.linked.asset', e.CONTENT_NAME = 'content.name', e.CONTENT_TYPE = 'content.type', e.CONTENT_STATUS = 'content.status', e.CONTENT_DIMENSION = 'content.dimension', e.CONTENT_SIZE = 'content.size', e.CONTENT_MIMETYPE = 'content.mimetype', e.CONTENT_EXTENSION = 'content.extension', e.CONTENT_AUTHOR = 'content.author', e.CONTENT_CATEGORY = 'content.category', e.CONTENT_UI_TRIGGER = 'content.ui.trigger', e.CONTENT_COLLECTION = 'custom.ui.collection', e.CONTENT_COLLECTION_PATH = 'custom.ui.collection_path', e.CONTENT_SCHEMA_VERSION = 'custom.contentSchemaVersion', e.CONTENT_IS_NEW = 'custom.contentIsNew', e.CONTENT_PHOTO_CATEGORY = 'content.photo_category', e.LOG_TRACEFLOW_CATEGORY = 'custom.traceflow', e.LOG_TRACE_ID = 'custom.traceId', e.LOG_SPAN_ID = 'custom.spanId', e.LOG_MESSAGE = 'custom.message', e.LOG_LEVEL = 'custom.level', e.LOG_METADATA = 'custom.meta', e.ERROR_UUID = 'custom.errorUUID', e.ERROR_MESSAGE = 'custom.errorMessage', e.ERROR_CODE = 'custom.errorCode', e.ERROR_FULL_STACK = 'custom.fullStack', e.ERROR_FULL_MESSAGE_WITH_CODE = 'custom.fullMessageWithCode', e.ERROR_CATEGORY = 'custom.errorCategory', e.ERROR_IS_EXPECTED = 'custom.errorIsExpected', e.ERROR_LOG_METADATA = 'custom.errorLogMetadata', e.ERROR_CLIENT_FATAL = 'custom.clientFatal', e.CONTENT_LOCATION = 'custom.content.location', e.CONTENT_UPDATED_LOCATION = 'custom.content.updated_location', e.CONTENT_SELECTION_COUNT = 'custom.content.selection_count', e.CUSTOM_HAS_PREMIUM_CONTENT = 'custom.has_premium_content', e.CUSTOM_GRID_OPERATION_LEVEL = 'custom.grid.operation_level', e.CUSTOM_FIREFLY_MODAL = 'custom.firefly.modal', e.CUSTOM_CONTENT_DURATION = 'custom.content.duration', e.CUSTOM_ASSET_COUNT = 'custom.asset.count', e.CUSTOM_CONTENT_MIMETYPE = 'custom.content.mimetype', e.CUSTOM_CONTENT_DROP_LOCATION = 'custom.content.drop_location', e.CUSTOM_CONTENT_TEXT_SCRIPTS = 'custom.content.text_scripts', e.CUSTOM_ASSET_CLASS = 'custom.asset_class', e.CUSTOM_RECOMMENDATION_RANK = 'custom.recommendation.rank', e.CUSTOM_TAB_NAME = 'custom.ui.tab_name', e.DOCUMENT_ADDED_SCENE_NO = 'custom.document.addedSceneNo', e.DOCUMENT_DUPLICATED_SCENE_NO = 'custom.document.duplicatedSceneNo', e.DOCUMENT_SCENE = 'custom.document.scene', e.DOCUMENT_SCENE_NO = 'custom.document.sceneNo', e.DOCUMENT_SOURCE_SCENE_NO = 'custom.document.sourceSceneNo', e.DOCUMENT_PASTED_SCENE_NO = 'custom.document.pastedSceneNo', e.DOCUMENT_COPIED_SCENE_NO = 'custom.document.copiedSceneNo', e.DOCUMENT_UPDATED_SCENE_NO = 'custom.document.updatedSceneNo', e.DOCUMENT_DURATION = 'custom.document.duration', e.DOCUMENT_UPDATED_DURATION = 'custom.document.updatedDuration', e.DOCUMENT_PAGE_ID = 'custom.document.pageId', e.DOCUMENT_PAGE_NO = 'custom.document.pageNo', e.DOCUMENT_ZOOM_LEVEL = 'custom.document.zoomLevel', e.DOCUMENT_UPDATED_ZOOM_LEVEL = 'custom.document.updatedZoomLevel', e.DOCUMENT_OBJECT_TYPE = 'custom.document.objectType', e.DOCUMENT_OFFSET = 'custom.document.offset', e.DOCUMENT_UPDATED_OFFSET = 'custom.document.updatedOffset', e.DOCUMENT_VIDEO_WINDOW = 'custom.document.videoWindow', e.DOCUMENT_UPDATED_WINDOW = 'custom.document.updatedWindow', e.DOCUMENT_SIZE = 'custom.document.size', e.DOCUMENT_UPDATED_SIZE = 'custom.document.updatedSize', e.OBJECT_VOLUME = 'custom.content.volume', e.OBJECT_UPDATED_VOLUME = 'custom.content.updatedVolume', e.OBJECT_SIZE = 'custom.object.size', e.OBJECT_UPDATED_SIZE = 'custom.object.updatedSize', e.OBJECT_ARTBOARD_SIZE = 'custom.object.artboardSize', e.CONTENT_OPACITY_VALUE = 'custom.content.opacity_value', e.CONTENT_BLEND_MODE = 'custom.content.blend_mode', e.UI_TRIM_DIRECTION = 'custom.ui.trimDirection', e.OBJECT_PREVIOUS_OFFSET = 'custom.document.offset', e.OBJECT_UPDATED_OFFSET = 'custom.document.updatedOffset', e.UI_METHOD = 'custom.ui.method', e.CONTENT_ADJUSTMENT_MAP = 'custom.content.adjustment_map', e.DOCUMENT_SCENE_COUNT = 'custom.document.scene_count', e.DOCUMENT_CONTENT_LIST = 'custom.document.content_list', e.CONTEXTUAL_TRACK_STATUS = 'custom.contextual_track.status', e.CONTENT_FILTER_NAME = 'custom.content.effect_name', e.CONTENT_FILTER_CATEGORY = 'custom.content.effect_category', e.CONTENT_FILTER_INTENSITY_VALUE = 'custom.content.effect_intensity_value', e.CONTENT_FILTER_DUOTONE_MAP = 'custom.content.effect_duotone_map', e.DOCUMENT_APPLIED_DURATION_SCENE_COUNT = 'custom.scene.applied_duration_scene_count', e.DOCUMENT_UPDATED_SCENE_COUNT = 'custom.document.num_scene_applied', e.CUSTOM_UI_LOCATION = 'custom.ui.location', e.CUSTOM_CONTENT_MULTISELECT = 'custom.content.multiselect', e.CUSTOM_CONTENT_SELECTION_COUNT = 'custom.content.selection_count', e.CUSTOM_IMAGE_SELECTION_COUNT = 'custom.image.selection_count', e.CUSTOM_VIDEO_SELECTION_COUNT = 'custom.video.selection_count', e.CUSTOM_TEXT_SELECTION_COUNT = 'custom.text.selection_count', e.CUSTOM_SHAPE_SELECTION_COUNT = 'custom.shape.selection_count', e.CUSTOM_ICON_SELECTION_COUNT = 'custom.icon.selection_count', e.CUSTOM_GIF_SELECTION_COUNT = 'custom.gif.selection_count', e.CUSTOM_UI_FILTER = 'custom.ui.filter', e.UI_SORT_TYPE = 'custom.ui.sort_type', e.UI_FILTER = 'ui.filter', e.UI_SORT_ORDER = 'ui.sort_order', e.CUSTOM_EDITOR_IS_DRAWING = 'custom.editor.is_drawing', e.CUSTOM_DELETE_TYPE = 'custom.delete_type', e.CUSTOM_DOCUMENT_NUMPAGESTOTAL = 'custom.document.numPagesTotal', e.CUSTOM_MOVE_ORIGIN = 'custom.move.origin', e.CUSTOM_MOVE_DESTINATION = 'custom.move.destination', e.CUSTOM_MOVE_ASSET_COUNT = 'custom.move.asset_count', e.CUSTOM_MULTIPLE_UPLOADS = 'custom.asset.multiple_uploads', e.CUSTOM_CONTENT_RESOLUTION = 'custom.content.resolution', e.CUSTOM_FILE_COUNT = 'custom.file_count', e.CUSTOM_UI_METHOD = 'custom.ui.method', e.CUSTOM_COLLAB_REVIEW_MODEL = 'custom.collab.review_model', e.CUSTOM_COLLAB_REVIEW_STATUS = 'custom.collab.review_status', e.CUSTOM_CONTENT_SETTING = 'custom.content.setting', e.CUSTOM_MIGRATION_STATUS = 'custom.migration.status', e.CUSTOM_AUDIO_EFFECT_ID = 'custom.audio.effect_id', e.CUSTOM_AUDIO_ADJUSTMENT_MAP = 'custom.audio.adjustment_map', e.CUSTOM_AUDIO_TRACK_NO = 'custom.audio.track_no', e.CUSTOM_AUDIO_FILE_SEQUENCE = 'custom.audio.file_sequence', e.CUSTOM_AUDIO_TRACK_TYPE = 'custom.audio.track_type', e.CUSTOM_AUDIO_ID = 'custom.audio.id', e.CUSTOM_AUDIO_DURATION = 'custom.audio.duration', e.CUSTOM_ENHANCE_SPEECH_ADJUST_PARAMS = 'custom.audio.enhance_speech_adjust_param', e.CUSTOM_UI_TRIGGER = 'custom.ui.trigger', e.IS_NEW_USER = 'hz.is_new_to_projectx', e.USER_FIRST_ACCESS_TIME = 'hz.user.first_access_time', e.CUSTOM_USER_ADMIN_ROLE = 'custom.user.admin_role', e.CUSTOM_EDU_USER_TYPE = 'custom.user.edu.profile_role', e.CUSTOM_EDU_CLASS_ID = 'custom.edu.class_id', e.CUSTOM_EDU_ACTION_TYPE = 'custom.edu.action_type', e.CUSTOM_EDU_LESSON_NAME = 'custom.edu.lesson_name', e.CUSTOM_EDU_COURSE_NAME = 'custom.edu.course_name', e.CUSTOM_EDU_BLOG_NAME = 'custom.edu.blog_name', e.CUSTOM_EDU_CTA_TARGET_PAGE = 'custom.edu.cta_target_page', e.CUSTOM_EDU_TEMPLATE_ID = 'custom.template.id', e.IS_K12 = 'is_k12', e.IS_EDU_USER = 'hz.user.is_edu', e.CUSTOM_USER_ID_TYPE = 'custom.user.entitlement_feature_set_type_express', e.CUSTOM_USER_OFFERING = 'custom.user.offering_express', e.CUSTOM_LEARN_CATEGORY = 'custom.learn.category', e.ORG_ID = 'hz.user.org_id', e.NUM_RESOURCES = 'custom.numResources', e.RESOLUTION = 'custom.resolution', e.SELECT_GUID = 'custom.selectGuid', e.SELECT_TYPE = 'custom.selectType', e.SVG_TAG = 'custom.svgTag', e.PLATFORM_TYPE = 'hz.source_platform_type', e.MOBILE_ID = 'hz.mobile_id', e.DEVICE_NAME = 'hz.device_name', e.DEVICE_HEIGHT = 'hz.user.device_screen_height', e.DEVICE_WIDTH = 'hz.user.device_screen_width', e.MOBILE_INSTALL_DATE = 'hz.mobile_install_date', e.EXPERIMENTS_ASSIGNED = 'hz.assigned_experiment_variants', e.EXPERIMENTS_EXPOSED = 'hz.experiment_exposed_variants', e.EXPERIMENT_ID = 'hz.experiment_id', e.EXPERIMENT_VARIANT_NAME = 'hz.experiment_variant_name', e.EXPERIMENT_TRIGGERED_PROPERTY_VALUE = 'hz.experiment_triggered_property_value', e.EXPERIMENT_TRIGGERED_EXPOSURE_EVENT = 'hz.experiment_triggered_exposure_event', e.FEATURE_ROLLOUTS_ASSIGNED = 'hz.user.pfr_assigned', e.CONTENT_REPLACE_TYPE = 'custom.content.replace_type', e.CUSTOM_UI_SEARCH_TYPE = 'custom.ui.search_type', e.CUSTOM_UI_KEYWORK_RANK = 'custom.ui.keyword_rank', e.CUSTOM_SEARCH_PREFIX_QUERY = 'custom.search.prefix_query', e.CUSTOM_SEARCH_SUGGESTION_LIST_SHOWN = 'custom.search.suggestion_list_shown', e.CUSTOM_TASK_NAME = 'custom.task.name', e.CUSTOM_TASK_TYPE = 'custom.task.type', e.CUSTOM_TASK_IS_WEBPAGE = 'custom.task.is_webpage', e.CUSTOM_SEARCH_SUGGESTED_TASK_AND_QUICKACTION = 'custom.search.suggested_task_and_quickaction', e.CUSTOM_QA_GROUP = 'custom.qa.group', e.CUSTOM_QA_TYPE = 'custom.qa.type', e.CUSTOM_QA_LOCATION = 'custom.qa.location', e.CUSTOM_SEARCH_ID = 'custom.search.id', e.CUSTOM_SEARCH_RESULT_COUNT = 'custom.search.result_count', e.CUSTOM_CONTENT_IMPRESSION_LIST = 'custom.content.impression_list', e.CUSTOM_TEMPLATES_TASK_NAME = 'custom.templates.task', e.CUSTOM_SEARCH_TOOL_NAME = 'custom.tool.name', e.CUSTOM_SEARCH_SUGGESTED_TOOL = 'custom.search.suggested_tool', e.CUSTOM_RECOMMENDED_SEARCH_CLICK = 'custom.recommended_search_click', e.CUSTOM_RECOMMENDATION_SOURCE = 'custom.recommendation.source', e.CUSTOM_SEARCH_RANK = 'custom.search.rank', e.CUSTOM_TEMPLATES_PAGE_COUNT = 'custom.templates.page_count', e.CUSTOM_MOBILE_DOWNLOAD_TRIGGER = 'custom.mobile.download_trigger', e.CUSTOM_UI_STYLE_FILTER = 'custom.ui.style_filter', e.CUSTOM_UI_MOOD_FILTER = 'custom.ui.mood_filter', e.CUSTOM_UI_TYPE_FILTER = 'custom.ui.type_filter', e.CUSTOM_UI_REGION_FILTER_ALL = 'custom.ui.region_filter_all', e.CUSTOM_UI_REGION_FILTER_DEFAULT = 'custom.ui.region_filter_default', e.CUSTOM_UI_REGION_FILTER_ADDED = 'custom.ui.region_filter_added', e.CUSTOM_UI_STATUS_FILTER = 'custom.ui.status_filter', e.CUSTOM_UI_CATEGORY_FILTER = 'custom.ui.category_filter', e.CUSTOM_UI_SUBJECT_FILTER = 'custom.ui.subject_filter', e.CUSTOM_UI_GRADE_FILTER = 'custom.ui.grade_filter', e.CUSTOM_UI_ACTIVITY_TYPE_FILTER = 'custom.ui.activity_type_filter', e.CUSTOM_UI_SIZE_FILTER = 'custom.ui.size_filter', e.CUSTOM_UI_TARGET_RESOURCE_FILTER = 'custom.ui.target_resource_filter', e.CUSTOM_UI_KEYWORD_FILTER = 'custom.ui.keyword_filter', e.CUSTOM_UI_TASK_FILTER = 'custom.ui.task_filter', e.CUSTOM_UI_PEOPLE_FILTER = 'custom.ui.people_filter', e.CUSTOM_UI_COLOR_FILTER = 'custom.ui.color_filter', e.CUSTOM_UI_GENRE_FILTER = 'custom.ui.genre_filter', e.CUSTOM_UI_VOCAL_FILTER = 'custom.ui.vocal_filter', e.CUSTOM_UI_ORIENTATION_FILTER = 'custom.ui.orientation_filter', e.CUSTOM_UI_GENERATIVE_AI_FILTER = 'custom.ui.generative_ai_filter', e.CUSTOM_UI_SEARCH_KEYWORD_LENGTH = 'custom.ui.search_keyword_length', e.CUSTOM_UI_SEARCH_KEYWORD_TOKEN_COUNT = 'custom.ui.search_keyword_token_count', e.USS_TRACKING_NULL_RECOVERY = 'uss_tracking.null_recovery', e.USS_TRACKING_QUERY_RECALL = 'uss_tracking.original_query_recall', e.USS_TRACKING_ADOBE_ONE_RECALL = 'uss_tracking.adobe_one_recall', e.USS_TRACKING_ADOBE_ONE_RESCORE = 'uss_tracking.adobe_one_rescore', e.USS_TRACKING_DESIGN_TYPE_BOOST = 'uss_tracking.design_type_boost', e.USS_TRACKING_VIDEO_T20_RESULT_COUNT = 'uss_tracking.video_t20_result_count', e.USS_TRACKING_VIDEO_T100_RESULT_COUNT = 'uss_tracking.video_t100_result_count', e.USS_TRACKING_QUERY_INTENT = 'uss_tracking.query_intent', e.USS_TRACKING_SPELLCHECK_IS_CORRECTED = 'uss_tracking.spellcheck_is_corrected', e.USS_TRACKING_CONTENT_INTERLEAVING_EXECUTED = 'uss_tracking.content_interleaving_executed', e.USS_TRACKING_IS_VALID_RECALL_SET_FOR_CONTENT_INTERLEAVING = 'uss_tracking.is_valid_recall_set_for_content_interleaving', e.USS_TRACKING_NO_OF_LONG_PROMPT_AC_SUGGEST = 'uss_tracking.no_of_longprompt_ac_suggest', e.CUSTOM_SEARCH_LONG_PROMPT_QUERY = 'custom.search.long_prompt_query', e.CUSTOM_SCREEN_LOAD_TYPE = 'custom.screen_load_time', e.CUSTOM_SESSION_RESTORE_REASON = 'custom.session_restore_reason', e.CUSTOM_PAGE_TASK_ID = 'custom.page.task_id', e.CUSTOM_PAGE_UPDATED_TASK_ID = 'custom.page.updated_task_id', e.CUSTOM_TASK_GROUP = 'custom.task.group', e.CUSTOM_TASK_SUBGROUP = 'custom.task.subgroup', e.CUSTOM_PANEL_NAME = 'custom.panel.name', e.CUSTOM_PRINT_WORKFLOW = 'custom.print.workflow', e.CUSTOM_PRINT_SIZE = 'custom.print.size', e.CUSTOM_ADDON_IS_AUTHENTICATED = 'custom.addon.is_authenticated', e.CUSTOM_LINK_DETAILS = 'custom.link.details', e.CUSTOM_UI_CTA_MESSAGE = 'custom.ui.cta_message', e.CUSTOM_UI_CARD_MESSAGE = 'custom.ui.card_message', e.CUSTOM_ANIMATION_EFFECT_CATEGORY = 'custom.animation.effect_category', e.CUSTOM_ANIMATION_EFFECT_ID = 'custom.animation.effect_id', e.CUSTOM_ANIMATION_ADJUSTMENT_MAP = 'custom.animation.adjustment_map', e.CUSTOM_ANIMATION_IS_MULTISELECT = 'custom.animation.is_multiselect', e.CUSTOM_ANIMATION_SCENE_PRESET_CATEGORY = 'custom.animation.scene_preset_category', e.CUSTOM_ANIMATION_SCENE_PRESET_ID = 'custom.animation.scene_preset_id', e.CUSTOM_TRANSITION_ADJUSTMENT_MAP = 'custom.transition.adjustment_map', e.CUSTOM_TRANSITION_DURATION = 'custom.transition.duration', e.CUSTOM_TRANSITION_EFFECT_NAME = 'custom.transition.effect_name', e.CUSTOM_TRANSITION_EFFECT_ID = 'custom.transition.effect_id', e.CUSTOM_TRANSITION_NUM_PAGES_APPLIED = 'custom.transition.num_pages_applied', e.CUSTOM_TRANSITION_NUM_APPLIED = 'custom.transition.num_transition_applied', e.CUSTOM_PROJECT_ID = 'custom.project.id', e.CUSTOM_PROJECTS_OPEN_FROM = 'custom.projects.open_from', e.CUSTOM_COLLAB_WORKFLOW = 'custom.collab.workflow', e.CUSTOM_LIBRARY_FILTER = 'custom.library.filter', e.CUSTOM_LIBRARY_TYPE = 'custom.library.type', e.CUSTOM_COLLAB_ACCESS_LEVEL = 'custom.collab.access_level', e.CUSTOM_COLLAB_USER_TYPE = 'custom.collab.user_type', e.CUSTOM_LIBRARY_ASSET_TYPES = 'custom.library.asset_types', e.CUSTOM_GENERAL_TOGGLE_MODE = 'custom.general.toggle_mode', e.CUSTOM_LIBRARY_COUNT = 'custom.library.count', e.CUSTOM_PROJECT_COUNT = 'custom.project.count', e.CUSTOM_REFERRER_APP = 'custom.referrer.app', e.CUSTOM_REFERRER_LANDING_TAB = 'custom.referrer.app_landing_tab', e.CUSTOM_REFERRER_ASSET_ID = 'custom.referrer.app_integration_asset_id', e.CUSTOM_REFERRER_INTENT = 'custom.referrer.app_intent', e.CUSTOM_REFERRER_ACTION = 'custom.referrer.app_action', e.CUSTOM_REFERRER_NBA_ACTION = 'custom.referrer.nba_action', e.CUSTOM_CONTENT_LOCK_STATUS = 'custom.content.lock_status', e.CUSTOM_DOCUMENT_LOCK_STATUS = 'custom.document.lock_status', e.CUSTOM_CONTENT_LOCK_SETTING = 'custom.content.lock_setting', e.EVENT_SOURCE_OS_VERSION = 'hz.user.os_version', e.EVENT_SOURCE_OS_NAME = 'hz.user.os_name', e.EVENT_SOURCE_DEVICE_MODEL = 'hz.user.device_model', e.EVENT_SOURCE_BROWSER_NAME = 'hz.user.browser_name', e.EVENT_SOURCE_BROWSER_VERSION = 'hz.user.browser_version', e.EVENT_SOURCE_PLATFORM_TYPE_DETAIL = 'hz.user.platform_type_detail', e.CUSTOM_DOCUMENT_NAVIGATION_METHOD = 'custom.document.navigation_method', e.CUSTOM_DOCUMENT_PREVIOUS_NAVIGATION_METHOD = 'custom.document.previous_navigation_method', e.CUSTOM_CONTENT_PAGE_COUNT = 'custom.content.page_count', e.CUSTOM_DOCUMENT_RESOLUTION = 'custom.document.resolution', e.CUSTOM_UI_ADD_PAGE_OPTION = 'custom.ui.add_page_option', e.CUSTOM_TEXT_AUTO_STYLE = 'custom.text.auto_style', e.CUSTOM_TEXT_FLOW_FLAG = 'custom.text.text_flow_flag', e.CUSTOM_OPERATION_NAME = 'custom.operation.name', e.CUSTOM_OPERATION_PREVIEW = 'custom.operation.preview', e.CUSTOM_OPERATION_RESULT_STATUS = 'custom.operation.result_status', e.CUSTOM_OPERATION_TARGET_ACTION = 'custom.operation.target_action', e.CUSTOM_OPERATION_TARGET_NAME = 'custom.operation.target_name', e.CUSTOM_OPERATION_TARGET_NORMALIZED_VALUE = 'custom.operation.target_normalized_value', e.CUSTOM_OPERATION_TARGET_VALUE = 'custom.operation.target_value', e.CUSTOM_OPERATION_TARGET_VALUE_ORIGINAL = 'custom.operation.target_value_original', e.CUSTOM_TEXT_SELECTION_SPAN = 'custom.text.selection_span', e.CUSTOM_OPERATION_TYPE = 'custom.operation.type', e.CUSTOM_TEXT_SELECTION_METHOD = 'custom.text.selection_method', e.CUSTOM_FONT_TYPE = 'custom.font.type', e.CUSTOM_TEXT_ORIGINAL_FONT = 'custom.text.original_font', e.CUSTOM_TEXT_FALLBACK_FONT = 'custom.text.fallback_font', e.CUSTOM_TEXT_FALLBACK_TYPE = 'custom.text.fallback_type', e.CUSTOM_TEXT_SCRIPT_CODE = 'custom.text.script_code', e.CUSTOM_TEXT_COUNT = 'custom.text.count', e.CUSTOM_DOCUMENT_SPELLCHECKER_STATUS = 'custom.document.spellchecker_status', e.CUSTOM_TEXT_SPELLCHECKER_LANGUAGE = 'custom.text.spellchecker_language', e.CUSTOM_TEXT_SPELLCHECKER_ACTION = 'custom.text.spellchecker_action', e.CUSTOM_TEXT_SPELLCHECKER_RECOMMENDATION_RANK = 'custom.text.spellchecker_recommendation_rank', e.CUSTOM_TEXT_SPELLCHECKER_IGNORED_WORD = 'custom.text.spellchecker_ignored_word', e.EVENT_MOBILE_EXPERIENCE_TYPE = 'hz.event.mobile_experience_type', e.CUSTOM_GIF_LOOP_TYPE = 'custom.gif.loop_type', e.CUSTOM_CONTENT_LOOP_TYPE = 'custom.content.loop_type', e.CUSTOM_CONTENT_COMPLETE_LOOP = 'custom.content.complete_loop', e.EVENT_MOBILE_BUILD_TYPE = 'hz.event.mobile_build_type', e.NUM_PAGES_ADDED = 'custom.document.num_pages_added_using_copy_paste', e.ADDED_PAGE_PREVIOUS_TASK = 'custom.added_page.previous_task', e.CUSTOM_FEEDBACK_SATISFACTION_RESPONSE = 'custom.feedback.satisfaction_response', e.CUSTOM_GEN_AI_EXPAND = 'custom.gen_ai.expand', e.CUSTOM_RESIZE_MODEL_ID = 'custom.resize.model_id', e.CUSTOM_RESIZE_RECENT_ENABLED = 'custom.resize.recent_enabled', e.CUSTOM_RESIZE_TYPE = 'custom.resize.type', e.CUSTOM_RESIZE_ORIGINAL_ASPECT_RATIO = 'custom.resize.original_aspect_ratio', e.CUSTOM_RESIZE_RESIZED_ASPECT_RATIO = 'custom.resize.resized_aspect_ratio', e.CUSTOM_RESIZE_DESIGN_TOKEN_COUNT = 'custom.resize.design_token_count', e.CUSTOM_PAGE_TASK_GROUP = 'custom.page.task_group', e.CUSTOM_PRINT_ADDON_PAGE_TYPE = 'custom.print_addon.page_type', e.CUSTOM_PRINT_ADDON_EXPERIENCE_TYPE = 'custom.print_addon.experience_type', e.CUSTOM_INPUT_WIDTH = 'custom.input_width', e.CUSTOM_INPUT_HEIGHT = 'custom.input_height', e.CUSTOM_INPUT_UNIT = 'custom.input_unit', e.CUSTOM_LAYER_SELECTION_METHOD = 'custom.layer.selection_method', e.CUSTOM_LAYER_SELECTION_TYPE = 'custom.layer.selection_type', e.CUSTOM_LAYER_COACHMARK_SELECTION = 'custom.layer.coachmark_selection', e.CUSTOM_SHARE_MENU_TYPE = 'custom.share.menu_type', e.CUSTOM_OUTLINE_TO_PRESENTATION_FLAG = 'custom.presentation.outline_to_presentation_flag', e.CUSTOM_DOCUMENT_ACROBAT_ORIGIN_FLAG = 'custom.document.acrobat_origin_flag', e.CUSTOM_PRESENTATION_AUDIENCE = 'custom.outline_to_presentation.presentation_audience', e.CUSTOM_PRESENTATION_TONE = 'custom.outline_to_presentation.presentation_tone', e.CUSTOM_PRESENTATION_LENGTH = 'custom.outline_to_presentation.presentation_length', e.CUSTOM_PRESENTATION_LEVEL_OF_DETAIL = 'custom.outline_to_presentation.level_of_detail', e.CUSTOM_PRESENTATION_IMAGE_SOURCES = 'custom.outline_to_presentation.presentation_image_sources', e.CUSTOM_ACTION_NAME = 'custom.action.name', e.CUSTOM_GEN_AI_HAS_3P_MODELS = 'custom.gen_ai.has_3p_models', e.IS_FOCUS_MODE = 'is_focus_mode', e.CUSTOM_FOCUS_MODE_ENTRY = 'custom.focusmode.entry', e.CUSTOM_FOCUS_MODE_TYPE = 'custom.focusmode.type', e.CUSTOM_ICON_NUM_COLORS = 'custom.icon.num_colors', e.CUSTOM_ICON_CUSTOMIZATION_TYPE = 'custom.icon.customization_type', e.IS_IN_GROUP = 'custom.content.grouped_element_flag', e.IS_GROUP = 'custom.content.is_group', e.GROUP_ELEMENTS = 'custom.group.grouped_elements_count', e.GROUP_ACTION_AREA = 'custom.group.action_area', e.NUM_GROUPS = 'custom.document.num_groups', e; }({})); At.ERROR_FULL_STACK, At.ERROR_LOG_METADATA, At.EVENT_URL, At.LOG_METADATA, At.ERROR_LOG_METADATA, Error; const Ut = { eventName: At.EVENT_PAGENAME, type: At.EVENT_TYPE, subType: At.EVENT_SUBTYPE, workflow: At.EVENT_WORKFLOW, subCategory: At.EVENT_SUBCATEGORY }; const Rt = new Set(Object.values(At)); const bt = class {
    trigger(e) { if (!this._analyticsClient) throw new Error('AnalyticsEvent instance without AnalyticsClient detected. Please register the event with AnalyticsClient.'); const t = {}; for (const [e, o] of Object.entries(Ut))t[o] = this._spec[e]; if (e) { let o; let n; const r = e; St in r && (o = new Date(r[St]), r[At.EVENT_TIME_START] = o.toISOString(), delete r[St]), It in r && (n = new Date(r[It]), r[At.EVENT_TIME_END] = n.toISOString(), delete r[It]), o && n && (r[At.EVENT_VALUE] = n.getTime() - o.getTime()); const a = r[yt]; void 0 !== a && (a && (r[At.EVENT_TYPE] = 'error'), delete r[yt]); for (const o of Object.keys(e))Rt.has(o) || o.indexOf('custom.') !== 0 && console.warn('Unrecognized AnalyticsPropertyName', { invalidName: o }), t[o] = e[o]; } this._analyticsClient._sendEvent(t); }

    set name(e) { this._spec.eventName = e; }

    get name() { return `${this._spec.eventName}`; }

    get type() { return this._spec.type; }

    get subType() { return this._spec.subType; }

    set client(e) { this._analyticsClient = e; }

    get client() { return this._analyticsClient; }

    set contextGuid(e) { if (!l(e)) throw new Error('Invalid UUID for contextGuid'); this._eventMetaData = this._eventMetaData || { contextGuid: '' }, this._eventMetaData.contextGuid = e; }

    constructor(e, t) { this._spec = e, t && (this._analyticsClient = t, this._analyticsClient._registerEvent(this)); }
  }; new bt({ eventName: 'view-mobile-app-usage-disclaimer', workflow: 'privacy', subCategory: 'operations', type: 'render', subType: 'mobile-app-usage-disclaimer' }), new bt({ eventName: 'select-mobile-app-privacy-continue', workflow: 'privacy', subCategory: 'operations', type: 'click', subType: 'select-mobile-app-privacy-continue' }), new bt({ eventName: 'select-native-app-share-sheet-option', workflow: 'export', subCategory: 'document', type: 'click', subType: 'native-app-share-sheet-option' }), new bt({ eventName: 'view-network-warning', workflow: 'network', subCategory: 'settings', type: 'render', subType: 'warning' }), new bt({ eventName: 'view-welcome-video', workflow: 'home', subCategory: 'navigation', type: 'render', subType: 'welcome-video' }), new bt({ eventName: 'dismiss-welcome-video', workflow: 'home', subCategory: 'navigation', type: 'dismiss', subType: 'welcome-video' }), new bt({ eventName: 'select-mobile-preview-migrate-cta', workflow: 'jackalope', subCategory: 'operations', type: 'click', subType: 'migrate-cta' }), new bt({ eventName: 'select-mobile-final-migration-cta', workflow: 'jackalope', subCategory: 'operations', type: 'click', subType: 'final-migration-cta' }), new bt({ eventName: 'view-mobile-try-first-time-modal', workflow: 'jackalope', subCategory: 'operations', type: 'render', subType: 'preview-first-time-modal' }), new bt({ eventName: 'select-mobile-preview-try-cta', workflow: 'jackalope', subCategory: 'operations', type: 'click', subType: 'try-cta' }), new bt({ eventName: 'select-mobile-preview-ribbon', workflow: 'jackalope', subCategory: 'operations', type: 'click', subType: 'mobile-preview-ribbon' }), new bt({ eventName: 'select-mobile-navigate-to-prior-app', workflow: 'jackalope', subCategory: 'operations', type: 'click', subType: 'return-to-prior-app' }), new bt({ eventName: 'close-mobile-migration-modal', workflow: 'jackalope', subCategory: 'operations', type: 'close', subType: 'update-modal' }), new bt({ eventName: 'select-mobile-1dotn-restart-cta', workflow: 'jackalope', subCategory: 'operations', type: 'click', subType: 'restart-cta' }), new bt({ eventName: 'cancel-mobile-1dotn-restart', workflow: 'jackalope', subCategory: 'operations', type: 'cancel', subType: 'restart' }), new bt({ eventName: 'view-mobile-restart-message', workflow: 'jackalope', subCategory: 'operations', type: 'render', subType: 'restart-message' }), new bt({ eventName: 'crash-detected', workflow: 'lifecycle', subCategory: 'operations', type: 'success', subType: 'crash-detected' }), new bt({ eventName: 'complete-gating-check', workflow: 'authentication', subCategory: 'pre-susi', type: 'check', subType: 'gating' }), new bt({ eventName: 'view-photo-album-permission-dialogue', workflow: 'interface', subCategory: 'operations', type: 'render', subType: 'photo-album-permission-dialogue' }), new bt({ eventName: 'select-photo-album-permission', workflow: 'interface', subCategory: 'operations', type: 'click', subType: 'photo-album-permission' }), new bt({ eventName: 'start-file-recovery', workflow: 'doc-management', subCategory: 'operations', type: 'success', subType: 'start-file-recovery' }), new bt({ eventName: 'continue-background-file-recovery', workflow: 'doc-management', subCategory: 'operations', type: 'continue', subType: 'background-file-recovery' }), new bt({ eventName: 'complete-file-recovery', workflow: 'doc-management', subCategory: 'operations', type: 'success', subType: 'complete-file-recovery' }), new bt({ eventName: 'view-mobile-migration-modal', workflow: 'jackalope', subCategory: 'operations', type: 'render', subType: 'migration-modal' }), new bt({ eventName: 'select-mobile-final-migration-cancel-cta', workflow: 'jackalope', subCategory: 'operations', type: 'click', subType: 'final-migration-cancel' }), new bt({ eventName: 'view-lead-video-experience', workflow: 'lead', subCategory: 'video', type: 'view', subType: 'lead-video-experience' }), new bt({ eventName: 'view-native-experiment', workflow: 'native', subCategory: 'experiment', type: 'view', subType: 'experiment' }), new bt({ eventName: 'send-app-to-foreground', workflow: 'mobile', subCategory: 'operations', type: 'send', subType: 'foreground' }), new bt({ eventName: 'send-app-to-background', workflow: 'mobile', subCategory: 'operations', type: 'send', subType: 'background' }), new bt({ eventName: 'select-open-in-editor', workflow: 'home', subCategory: 'operations', type: 'select', subType: 'open-in-editor' }), new bt({ eventName: 'submit-att-dialog-response', workflow: 'legal', subCategory: 'permission', type: 'submit', subType: 'att-response' }), new bt({ eventName: 'view-mobile-eol-welcome-modal', workflow: 'eol', subCategory: 'operations', type: 'render', subType: 'mobile-eol-welcome' }), new bt({ eventName: 'select-mobile-eol-welcome-learn', workflow: 'eol', subCategory: 'operations', type: 'select', subType: 'mobile-eol-learn' }), new bt({ eventName: 'select-mobile-eol-welcome-view-files', workflow: 'eol', subCategory: 'operations', type: 'select', subType: 'mobile-eol-view-files' }), new bt({ eventName: 'dismiss-mobile-eol-welcome', workflow: 'eol', subCategory: 'operations', type: 'dismiss', subType: 'mobile-eol-modal' }), new bt({ eventName: 'select-feedback-tab', workflow: 'interface', subCategory: 'navigation', type: 'click', subType: 'feedback' }), new bt({ eventName: 'select-left-navigation', workflow: 'mobile-home', subCategory: 'navigation', type: 'click', subType: 'left-navigation' }), new bt({ eventName: 'select-schedule-tab', workflow: 'interface', subCategory: 'navigation', type: 'click', subType: 'schedule' }), new bt({ eventName: 'select-learn-tab', workflow: 'interface', subCategory: 'navigation', type: 'click', subType: 'learn' }); new bt({ eventName: 'select-explore-tab', workflow: 'interface', subCategory: 'navigation', type: 'click', subType: 'explore' }), new bt({ eventName: 'select-home-tab', workflow: 'interface', subCategory: 'navigation', type: 'click', subType: 'home' }), new class extends Nt {constructor(e, t) { super({ name: e, enabledDefault: Boolean(t) }); }}('enable-cross-env-oauth-redirect', !0), new Map([[i.POPUP_OPENED, 'The window for authorization was opened.'], [i.POPUP_BLOCKED, 'The window for authorization was blocked.'], [i.POPUP_TIMEOUT, 'The window for authorization was timed out.'], [i.POPUP_CLOSED, 'The window was closed before completing the authorization.'], [i.IFRAME_LOAD_FAILED, 'The authorization iframe failed to load.']]); var vt = (function (e) { return e.currentPage = 'currentPage', e.entireDocument = 'entireDocument', e.specificPages = 'specificPages', e; }({})); var Mt = (function (e) { return e.document = 'document', e.published = 'published', e; }({})); var Dt = (function (e) { return e.png = 'image/png', e.jpg = 'image/jpeg', e.mp4 = 'video/mp4', e.pdf = 'application/pdf', e.pptx = 'application/vnd.openxmlformats-officedocument.presentationml.presentation', e; }({})); var wt = (function (e) { return e.page = 'page', e; }({})); var Lt = (function (e) { return e.export = 'export', e.preview = 'preview', e.print = 'print', e; }({})); var Pt = (function (e) { return e.confirmation = 'confirmation', e.information = 'information', e.warning = 'warning', e.destructive = 'destructive', e.error = 'error', e.input = 'input', e.custom = 'custom', e; }({})); var Ft = (function (e) { return e.text = 'text', e; }({})); var kt = (function (e) { return e.alert = 'alert', e.input = 'input', e.custom = 'custom', e; }({})); var Vt = (function (e) { return e.primary = 'primary', e.secondary = 'secondary', e.cancel = 'cancel', e.close = 'close', e; }({})); var Gt = (function (e) { return e.panel = 'panel', e.dialog = 'dialog', e.script = 'script', e.documentSandbox = 'documentSandbox', e.command = 'command', e; }({})); var xt = (function (e) { return e.success = 'success', e.error = 'error', e; }({})); var Bt = (function (e) { return e.Inch = 'in', e.Millimeter = 'mm', e; }({})); var zt = (function (e) { return e.Audio = 'Audio', e; }({})); var Yt = (function (e) { return e.sd480p = '480p', e.hd720p = '720p', e.fhd1080p = '1080p', e.qhd1440p = '1440p', e.uhd2160p = '2160p', e.custom = 'custom', e; }({})); var Kt = (function (e) { return e[e.fps23_976 = 23.976] = 'fps23_976', e[e.fps24 = 24] = 'fps24', e[e.fps25 = 25] = 'fps25', e[e.fps29_97 = 29.97] = 'fps29_97', e[e.fps30 = 30] = 'fps30', e[e.fps60 = 60] = 'fps60', e; }({})); var jt = (function (e) { return e[e.mbps4 = 4e6] = 'mbps4', e[e.mbps8 = 8e6] = 'mbps8', e[e.mbps10 = 1e7] = 'mbps10', e[e.mbps12 = 12e6] = 'mbps12', e[e.mbps15 = 15e6] = 'mbps15', e[e.mbps25 = 25e6] = 'mbps25', e[e.mbps50 = 5e7] = 'mbps50', e; }({})); var Ht = (function (e) { return e.search = 'search', e.yourStuff = 'yourStuff', e.templates = 'templates', e.media = 'media', e.text = 'text', e.elements = 'elements', e.grids = 'grids', e.brands = 'brands', e.addOns = 'addOns', e; }({})); var Wt = (function (e) { return e.video = 'video', e.audio = 'audio', e.photos = 'photos', e; }({})); var Xt = (function (e) { return e.designAssets = 'designAssets', e.backgrounds = 'backgrounds', e.shapes = 'shapes', e.stockIcons = 'stockIcons', e.charts = 'charts', e; }({})); var $t = (function (e) { return e.search = 'search', e.navigate = 'navigate', e; }({})); var Jt = (function (e) { return e.cdnUrl = 'cdnUrl', e.jumpUrl = 'jumpUrl', e; }({})); var Zt = (function (e) { return e.Feature = 'Feature', e.FeatureChecker = 'FeatureChecker', e.FloodgateFeature = 'FloodgateFeature', e.DraftFeature = 'DraftFeature', e; }({})); var qt = (function (e) { return e.Setting = 'Setting', e.EnvSetting = 'EnvSetting', e.RequiredSetting = 'RequiredSetting', e; }({})); var Qt = (function (e) { return e.app = 'app', e.web = 'web', e; }({})); var eo = (function (e) { return e.mobile = 'mobile', e.tablet = 'tablet', e.desktop = 'desktop', e; }({})); var to = (function (e) { return e.iOS = 'ios', e.iPadOS = 'ipad', e.chromeOS = 'chromeOS', e.android = 'android', e.chromeBrowser = 'chromeBrowser', e.firefoxBrowser = 'firefoxBrowser', e.edgeBrowser = 'edgeBrowser', e.samsungBrowser = 'samsumgBrowser', e.safariBrowser = 'safariBrowser', e.unknown = 'unknown', e; }({})); var oo = (function (e) { return e.top = 'top', e.bottom = 'bottom', e.left = 'left', e.right = 'right', e; }({})); var no = (function (e) { return e.KB = 'KB', e.MB = 'MB', e; }({})); var ro = (function (e) { return e.docx = 'docx', e.gdoc = 'gdoc', e; }({})); var ao = (function (e) { return e.WIDGET = 'widget', e.COMMAND = 'command', e.SCRIPT = 'script', e.PANEL = 'panel', e.SHARE = 'share', e.CONTENT_HUB = 'content-hub', e.MOBILE_MEDIA_AUDIO = 'mobile.media.audio', e.MOBILE_YOUR_STUFF_FILES = 'mobile.your-stuff.files', e.MOBILE_MORE = 'mobile.more', e.SCHEDULE = 'schedule', e.CONTEXTUAL_REPLACE = 'contextual.replace', e.CONTEXTUAL_UPLOAD = 'contextual.upload', e.CONTEXTUAL_BULK_CREATE = 'contextual.bulk-create', e.IMPORT_HUB = 'import-hub', e; }({})); new RegExp('^(Express)$', 'u'), new RegExp('^(lightest|light|medium|dark|darkest|all)$', 'u'), new RegExp('^(panel|script|share|content-hub|mobile.your-stuff.files|mobile.media.audio|mobile.more|schedule|contextual.replace|contextual.upload|contextual.bulk-create|command|import-hub)$', 'u'), new RegExp('^(allow-popups|allow-presentation|allow-downloads|allow-popups-to-escape-sandbox|allow-forms)$', 'u'), new RegExp('^[a-zA-Z0-9]+[a-zA-Z0-9 ]{2,44}$', 'u'), new RegExp('^[0-9]+.[0-9]+.[0-9]+$', 'u'), new RegExp('^(desktop|mobile|app|mobile-ios|mobile-android)$', 'u'), new RegExp('^(clipboard-write|clipboard-read)$', 'u'), Object.prototype.hasOwnProperty; const io = (new class {
    constructor(e = t) { this._urlImporter = e; }

    async _performHostHandshake() { const e = await this._waitForHostHandshake(); const t = e.apiUrl; if (t) { const o = await this._urlImporter(t); await o.setupAddOn(); const n = await o.apiProviderFactory.createSDKAPIProvider(e); return n.notifySDKInitComplete(), { apiObjects: n.apiObjects, apiVersion: e.apiVersion }; } throw new Error(`Failed to initialize Addon SDK. Unsupported API version: ${e.apiVersion}`); }

    bootstrapSDK() { let e; let t; const o = this._performHostHandshake().then(((o) => { e = o.apiObjects, t = o.apiVersion; })); return { get apiVersion() { if (t) return t; throw new Error('Invalid API version. SDK is not fully intialized.'); }, get ready() { return o; }, get app() { if (e) return e.app; throw new Error('Invalid app property. SDK is not fully initialized.'); }, get instance() { if (e) return e.instance; throw new Error('Invalid instance property. SDK is not fully initialized.'); }, get constants() { if (e) return e.constants; throw new Error('Invalid constants property. SDK is not fully initialized.'); }, get internal() { if (e) return e.internal; throw new Error('Invalid internal property. SDK is not fully initialized.'); } }; }

    _waitForHostHandshake() { return new Promise(((e, t) => { window.addEventListener('message', (function o({ source: n, data: r }) { if (n !== window.parent || r.type !== 'initPort') return; window.removeEventListener('message', o); const a = r.port; a ? e({ port: a, apiVersion: r.apiVersion, apiUrl: r.apiUrl }) : t(new Error('Received host initialization message without port.')); })); })); }
  }()).bootstrapSDK();
})(); const r = n.qp; const a = n.K3; const i = n.g6; const s = n.L$; const c = n.QQ; const _ = n.vC; const u = n.gT; const l = n.a3; const E = n.Vf; const p = n.z; const d = n.DD; const T = n.Gc; const m = n.Te; const O = n.fS; const f = n.Wf; const g = n.lc; const h = n.IT; const C = n.xn; const N = n.a7; const S = n.zh; const I = n.e6; const y = n.lJ; const A = n.z7; const U = n.JP; const R = n.vm; const b = n.Sd; const v = n.qX; const M = n.$e; const D = n.ZP; export { r as AppEvent, a as AuthorizationStatus, i as BleedUnit, s as ButtonType, c as ColorPickerEvent, _ as ColorPickerPlacement, u as Constants, l as DeviceClass, E as DialogResultType, p as EditorPanel, d as ElementsTabs, T as EntrypointType, m as FeatureType, O as FieldType, f as MediaTabs, g as MediaType, h as PanelActionType, C as PdfReturnUrlType, N as PlatformEnvironment, S as PlatformType, I as Range, y as RenditionFormat, A as RenditionIntent, U as RenditionType, R as RuntimeType, b as SettingType, v as SupportedMimeTypes, M as Variant, D as default };
// # sourceMappingURL=sdk.js.map
