version: 1
auto-generated: true
indices:
  se_express:
    include:
      - /se/express/**
    target: /se/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  no_express:
    include:
      - /no/express/**
    target: /no/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  express:
    include:
      - /express/**
    target: /express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  express_learn_blog:
    include:
      - /express/learn/blog/**
    target: /express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  cn_express:
    include:
      - /cn/express/**
    target: /cn/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  in_express_learn_blog:
    include:
      - /in/express/learn/blog/**
    target: /in/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  in_express:
    include:
      - /in/express/**
    target: /in/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  it_express:
    include:
      - /it/express/**
    target: /it/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  it_express_learn_blog:
    include:
      - /it/express/learn/blog/**
    target: /it/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  tw_express:
    include:
      - /tw/express/**
    target: /tw/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  uk_express:
    include:
      - /uk/express/**
    target: /uk/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  uk_express_learn_blog:
    include:
      - /uk/express/learn/blog/**
    target: /uk/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  kr_express:
    include:
      - /kr/express/**
    target: /kr/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  nl_express:
    include:
      - /nl/express/**
    target: /nl/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  de_express:
    include:
      - /de/express/**
    target: /de/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  de_express_learn_blog:
    include:
      - /de/express/learn/blog/**
    target: /de/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  dk_express:
    include:
      - /dk/express/**
    target: /dk/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  br_express:
    include:
      - /br/express/**
    target: /br/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  br_express_learn_blog:
    include:
      - /br/express/learn/blog/**
    target: /br/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  fi_express:
    include:
      - /fi/express/**
    target: /fi/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  fr_express:
    include:
      - /fr/express/**
    target: /fr/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  fr_express_learn_blog:
    include:
      - /fr/express/learn/blog/**
    target: /fr/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  es_express_learn_blog:
    include:
      - /es/express/learn/blog/**
    target: /es/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  es_express:
    include:
      - /es/express/**
    target: /es/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  jp_express_learn_blog:
    include:
      - /jp/express/learn/blog/**
    target: /jp/express/learn/blog/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      date:
        select: head > meta[name="publication-date"]
        value: parseTimestamp(attribute(el, "content"), "MM/DD/YYYY")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: attribute(el, "content")
      teaser:
        select: head > meta[name="teaser"]
        value: attribute(el, "content")
      tags:
        select: head > meta[property="article:tag"]
        values: attribute(el, "content")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
  jp_express:
    include:
      - /jp/express/**
    target: /jp/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
  id_id_express:
    include:
      - /id_id/express/**
    target: /id_id/express/query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      shortTitle:
        select: head > meta[name="shortTitle"]
        value: attribute(el, "content")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")
